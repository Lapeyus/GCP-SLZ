# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ['main']

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: 'pages'
  cancel-in-progress: false

jobs:
  digraphs:
    name: 'custom digraph docs'
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install Graphviz
      run: |
        sudo apt-get update
        sudo apt-get install -y graphviz

    - name: Install dependencies
      run: |
        pip install pyhcl graphviz

    - name: Graph the root slz folders
      run: python terraform/modules/generate_folder_digraph.py './terraform/slz-folders-core.tf'

    - name: Configure Git
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"

    - name: Commit and push generated image
      run: |
        git add ./documentation/docs/img/slz-folders-core.png
        git commit -m "Add autogenerated image [ci skip]"
        git push origin HEAD:${{ github.ref }}

    - name: Upload generated image
      uses: actions/upload-artifact@v2
      with:
        name: slz-folders-core.png
        path: ./documentation/docs/img/slz-folders-core.png
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Pages
        uses: actions/configure-pages@v3
      - uses: actions/setup-python@v2
        with:
          python-version: 3.x
      - run: pip install mkdocs
      - run: pip install mkdocs-material
      - run: mkdocs gh-deploy --config-file documentation/mkdocs.yml  --force --clean --verbose
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: 'documentation/site/'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
      #   with:
      #     token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
