
Fetching data about Google Cloud folders that are children
of the parent folder identified by `module.folders.id["BusinessUnits"]` using the Google provider in Terraform.

```hcl
data "google_folders" "prj_folders" {
  parent_id = module.folders.id["BusinessUnits"]
}
```


### local values:
- `child_folders` extracts all child folders from the `prj_folders` data object,
- `groups` is a list of user groups,
- `folder_group_combinations` creates a combination of each folder with each group and sets their display name and group type, and `members` is a map that initializes empty lists for each project-group combination.

```hcl
locals {
  child_folders = [for folder in data.google_folders.prj_folders.folders : folder]
  groups        = ["developers", "devops", "admins"]
  folder_group_combinations = flatten([
    for folder in local.child_folders : [
      for group in local.groups : {
        display_name = lower(folder.display_name),
        group_type   = group
      }
    ]
  ])
  members = {
    projecta-developers = []
    projecta-devops     = []
    projecta-admins     = []
    projectb-developers = []
    projectb-devops     = []
    projectb-admins     = []
    projectc-developers = []
    projectc-devops     = []
    projectc-admins     = []
  }
}
```

This block of Terraform code creates a Google Group for each combination of folder and group type,
with the group's ID, display name, and description being generated based on the owner, display name, and group type,
and assigns members from the previously defined `members` map.

```hcl
module "project_groups" {
  for_each     = { for combination in local.folder_group_combinations : "${combination.display_name}-${combination.group_type}" => combination }
  source       = "terraform-google-modules/group/google"
  version      = "0.4.0"
  id           = "${each.value.display_name}-${each.value.group_type}@${data.google_organization.org.domain}"
  display_name = "${each.value.display_name}-${each.value.group_type}"
  description  = "Group for ${each.value.display_name} ${each.value.group_type}"
  domain       = data.google_organization.org.domain
  managers     = []
  members      = local.members["${split("${var.owner}-", each.value.display_name)[1]}-${each.value.group_type}"]
  owners       = []
}
```
