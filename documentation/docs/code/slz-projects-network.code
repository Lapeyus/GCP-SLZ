*
### Shared VPC Host Project
This module creates a Google Cloud Project that will act as a Shared VPC host.

```hcl
module "network" {
  source                         = "terraform-google-modules/project-factory/google"
  version                        = "14.3.0"
  name                           = "${var.owner}-network"
  random_project_id              = true
  random_project_id_length       = 3
  org_id                         = var.org_id
  billing_account                = var.billing_account
  folder_id                      = module.folders.id["Network"]
  enable_shared_vpc_host_project = true
  default_service_account        = "disable"
  activate_apis                  = var.activate_apis["Network"]

  labels = {
    terraform_managed = true
    network_host      = true
  }
}
```

*
### Preprod VPC in Shared VPC Host
This module sets up a Virtual Private Cloud (VPC) for pre-production environments within the shared VPC host project.

```hcl
module "preprod_vpc" {
  source                                 = "terraform-google-modules/network/google"
  version                                = "7.3.0"
  project_id                             = module.network.project_id
  network_name                           = "preprod"
  routing_mode                           = "GLOBAL"
  delete_default_internet_gateway_routes = true
  subnets = [
    {
      subnet_name           = "owner-trans-dev-us-east4"
      subnet_ip             = "192.168.32.0/24"
      subnet_region         = "us-east4"
      subnet_private_access = true
      subnet_flow_logs      = false
      description           = "Develop Data Transformation Subnet"
    },
    {
      subnet_name           = "owner-projecta-dev-us-east4"
      subnet_ip             = "192.168.33.0/24"
      subnet_region         = "us-east4"
      subnet_private_access = true
      subnet_flow_logs      = false
      description           = "Develop Data projectaion Subnet"
    },
    {
      subnet_name           = "owner-cur-dev-us-east4"
      subnet_ip             = "192.168.34.0/24"
      subnet_region         = "us-east4"
      subnet_private_access = true
      subnet_flow_logs      = false
      description           = "Develop Data Curated Subnet"
    },
    {
      subnet_name           = "owner-trans-qa-us-east4"
      subnet_ip             = "192.168.35.0/24"
      subnet_region         = "us-east4"
      subnet_private_access = true
      subnet_flow_logs      = false
      description           = "QA Data Transformation Subnet"
    },
    {
      subnet_name           = "owner-projecta-qa-us-east4"
      subnet_ip             = "192.168.36.0/24"
      subnet_region         = "us-east4"
      subnet_private_access = true
      subnet_flow_logs      = false
      description           = "QA Data projectaion Subnet"
    },
    {
      subnet_name           = "owner-cur-qa-us-east4"
      subnet_ip             = "192.168.37.0/24"
      subnet_region         = "us-east4"
      subnet_private_access = true
      subnet_flow_logs      = false
      description           = "QA Data Curated Subnet"
    },
    {
      subnet_name           = "owner-trans-staging-us-east4"
      subnet_ip             = "192.168.38.0/24"
      subnet_region         = "us-east4"
      subnet_private_access = true
      subnet_flow_logs      = false
      description           = "Staging Data Transformation Subnet"
    },
    {
      subnet_name           = "owner-projecta-staging-us-east4"
      subnet_ip             = "192.168.39.0/24"
      subnet_region         = "us-east4"
      subnet_private_access = true
      subnet_flow_logs      = false
      description           = "Staging Data projectaion Subnet"
    },
    {
      subnet_name           = "owner-cur-staging-us-east4"
      subnet_ip             = "192.168.40.0/24"
      subnet_region         = "us-east4"
      subnet_private_access = true
      subnet_flow_logs      = false
      description           = "Staging Data Curated Subnet"
    },
    {
      subnet_name           = "owner-trans-prodfix-us-east4"
      subnet_ip             = "192.168.41.0/24"
      subnet_region         = "us-east4"
      subnet_private_access = true
      subnet_flow_logs      = false
      description           = "Production fixes Data Transformation Subnet"
    },
    {
      subnet_name           = "owner-projecta-prodfix-us-east4"
      subnet_ip             = "192.168.42.0/24"
      subnet_region         = "us-east4"
      subnet_private_access = true
      subnet_flow_logs      = false
      description           = "Production fixes Data projectaion Subnet"
    },
    {
      subnet_name           = "owner-cur-prodfix-us-east4"
      subnet_ip             = "192.168.43.0/24"
      subnet_region         = "us-east4"
      subnet_private_access = true
      subnet_flow_logs      = false
      description           = "Production fixes Data Curated Subnet"
    },
    {
      subnet_name           = "nonprod-vpc-con-us-east4"
      subnet_ip             = "192.168.44.0/28"
      subnet_region         = "us-east4"
      subnet_private_access = true
      subnet_flow_logs      = false
      description           = "Dedicated non prod VPC Connector Subnet"
    }
  ]

  secondary_ranges = {
    owner-trans-dev-us-east4 = [
      {
        range_name    = "trans-dev-pod"
        ip_cidr_range = "10.0.0.0/23"
      },
      {
        range_name    = "trans-dev-svc"
        ip_cidr_range = "10.0.2.0/23"
      },

    ]
    owner-trans-qa-us-east4 = [
      {
        range_name    = "trans-qa-pod"
        ip_cidr_range = "10.0.4.0/23"
      },
      {
        range_name    = "trans-qa-svc"
        ip_cidr_range = "10.0.6.0/23"
      },
    ]

    owner-trans-staging-us-east4 = [
      {
        range_name    = "trans-staging-pod"
        ip_cidr_range = "10.0.8.0/23"
      },
      {
        range_name    = "trans-staging-svc"
        ip_cidr_range = "10.0.10.0/23"
      },
    ]

    owner-trans-prodfix-us-east4 = [
      {
        range_name    = "trans-prodfix-pod"
        ip_cidr_range = "10.0.12.0/23"
      },
      {
        range_name    = "trans-prodfix-svc"
        ip_cidr_range = "10.0.14.0/23"
      },
    ]
  }

  routes = [
    {
      name              = "egress-igw-preprod"
      description       = "route through IGW to access internet"
      destination_range = "0.0.0.0/0"
      next_hop_internet = "true"
    }
  ]
}
```

*
### Preprod PSA Global Address
This resource reserves an internal IP range for VPC peering in pre-production environments.

```hcl
resource "google_compute_global_address" "preprod" {
  name          = "preprod-psconnect-ips"
  project       = module.network.project_id
  purpose       = "VPC_PEERING"
  address_type  = "INTERNAL"
  network       = module.preprod_vpc.network_id
  address       = "192.168.88.0"
  prefix_length = "21"
}
```

*
### Preprod PSA Service Networking Connection
This resource establishes a service networking connection using the reserved IP range for VPC peering in pre-production environments.

```hcl
resource "google_service_networking_connection" "preprod" {
  network                 = module.preprod_vpc.network_id
  service                 = "servicenetworking.googleapis.com"
  reserved_peering_ranges = [google_compute_global_address.preprod.name]
}
```

*
### Preprod PSA Route Export Configuration
This resource configures route exports for the service networking connection in pre-production environments.

```hcl
resource "google_compute_network_peering_routes_config" "preprod" {
  project              = module.network.project_id
  peering              = google_service_networking_connection.preprod.peering
  network              = module.preprod_vpc.network_name
  import_custom_routes = true
  export_custom_routes = true
}
```

*
### Preprod VPC Access Connector
This resource creates a VPC Access Connector in pre-production environments for serverless products to connect to the VPC.

```hcl
resource "google_vpc_access_connector" "preprod" {
  name    = "vpcconn-preprod"
  project = module.network.project_id
  region  = "us-east4"
  subnet {
    name = "nonprod-vpc-con-us-east4"
  }
}
```

*
### Preprod Cloud NAT
This module sets up a Cloud NAT gateway for the pre-production VPC to allow resources without public IP addresses to access the internet.

```hcl
module "preprod_cloud_nat" {
  source        = "terraform-google-modules/cloud-nat/google"
  version       = "4.1.0"
  project_id    = module.network.project_id
  create_router = true
  network       = module.preprod_vpc.network_id
  region        = "us-east4"
  router        = "cloud-router-us-east4"
  name          = "preprod-us-east4"
}
```

*
### Production VPC in Shared VPC Host
This module sets up a Virtual Private Cloud (VPC) for production environments within the shared VPC host project.

```hcl
module "prod_vpc" {
  source                                 = "terraform-google-modules/network/google"
  version                                = "7.3.0"
  project_id                             = module.network.project_id
  network_name                           = "production"
  routing_mode                           = "GLOBAL"
  delete_default_internet_gateway_routes = true
  subnets = [
    {
      subnet_name           = "owner-trans-prod-us-east5"
      subnet_ip             = "192.168.0.0/24"
      subnet_region         = "us-east5"
      subnet_private_access = true
      subnet_flow_logs      = false
      description           = "Prod Transformation Subnet"
    },
    {
      subnet_name           = "owner-projecta-prod-us-east5"
      subnet_ip             = "192.168.1.0/24"
      subnet_region         = "us-east5"
      subnet_private_access = true
      subnet_flow_logs      = false
      description           = "Prod projectaion Subnet"
    },
    {
      subnet_name           = "owner-cur-prod-us-east5"
      subnet_ip             = "192.168.3.0/24"
      subnet_region         = "us-east5"
      subnet_private_access = true
      subnet_flow_logs      = false
      description           = "Prod Curated Subnet"
    },
    {
      subnet_name           = "owner-trans-dr-us-west1"
      subnet_ip             = "192.168.4.0/24"
      subnet_region         = "us-west1"
      subnet_private_access = true
      subnet_flow_logs      = false
      description           = "Disaster Recovery Transformation Subnet"
    },
    {
      subnet_name           = "owner-projecta-dr-us-west1"
      subnet_ip             = "192.168.5.0/24"
      subnet_region         = "us-west1"
      subnet_private_access = true
      subnet_flow_logs      = false
      description           = "Disaster Recovery projectaion Subnet"
    },
    {
      subnet_name           = "owner-cur-dr-us-west1"
      subnet_ip             = "192.168.6.0/24"
      subnet_region         = "us-west1"
      subnet_private_access = true
      subnet_flow_logs      = false
      description           = "Disaster Recovery Curated Subnet"
    },
    {
      subnet_name           = "prod-vpc-con-us-east5"
      subnet_ip             = "192.168.2.0/28"
      subnet_region         = "us-east5"
      subnet_private_access = true
      subnet_flow_logs      = false
      description           = "Dedicated prod VPC Connector Subnet"
    }
  ]
  secondary_ranges = {
    owner-trans-prod-us-east5 = [
      {
        range_name    = "trans-prod-pod"
        ip_cidr_range = "10.0.0.0/23"
      },
      {
        range_name    = "trans-prod-svc"
        ip_cidr_range = "10.0.2.0/23"
      },
    ]
    owner-dr-us-west1 = [
      {
        range_name    = "trans-dr-pod"
        ip_cidr_range = "10.0.4.0/23"
      },
      {
        range_name    = "trans-dr-svc"
        ip_cidr_range = "10.0.6.0/23"
      },
    ]
  }

  routes = [
    {
      name              = "prod-egress"
      description       = "route through IGW to access internet"
      destination_range = "0.0.0.0/0"
      next_hop_internet = "true"
    }
  ]
}
```

*
### Google Compute Global Address for Prod PSA
This resource is used to create a global IP address for VPC peering in a Google Cloud Project.

```hcl
resource "google_compute_global_address" "prod" {
  name          = "prod"
  project       = module.network.project_id
  purpose       = "VPC_PEERING"
  address_type  = "INTERNAL"
  network       = module.prod_vpc.network_id
  address       = "192.168.88.0"
  prefix_length = "21"
}
```

*
### Google Service Networking Connection for Prod PSA
This resource is used to establish the VPC peering connection.

```hcl
resource "google_service_networking_connection" "prod" {
  network                 = module.prod_vpc.network_id
  service                 = "servicenetworking.googleapis.com"
  reserved_peering_ranges = [google_compute_global_address.prod.name]
}
```

*
### Google Compute Network Peering Routes Configuration for Prod PSA
This resource is responsible for configuring custom routes for the VPC peering connection.

```hcl
resource "google_compute_network_peering_routes_config" "prod" {
  project              = module.network.project_id
  peering              = google_service_networking_connection.prod.peering
  network              = module.prod_vpc.network_name
  import_custom_routes = true
  export_custom_routes = true
}
```

*
### Google VPC Access Connector for Prod
This resource establishes a VPC Access Connector in the `us-east5` region.

```hcl
resource "google_vpc_access_connector" "prod" {
  name    = "prod"
  project = module.network.project_id
  region  = "us-east5"
  subnet {
    name = "prod-vpc-con-us-east5"
  }
}
```

*
### Cloud NAT for Prod using Terraform Google Module
This module sets up Cloud NAT for the production VPC in the `us-east5` region.

```hcl
module "cloud_nat_prod" {
  source        = "terraform-google-modules/cloud-nat/google"
  version       = "4.1.0"
  project_id    = module.network.project_id
  create_router = true
  network       = module.prod_vpc.network_id
  region        = "us-east5"
  router        = "us-east5"
  name          = "prod-us-east5"
}
```

*
### Firewall Policy using Custom Module
This module configures firewall policies for both pre-production and production VPCs.
#
```hcl
module "firewall_policy" {
  source      = "./modules/network-firewall-policy"
  project_id  = module.network.project_id
  policy_name = "${var.owner}-main"
  description = "${var.owner} main firewall policy"
  target_vpcs = [module.preprod_vpc.network_id, module.prod_vpc.network_id]

  rules = [
    {
      priority       = "800"
      direction      = "INGRESS"
      action         = "allow"
      rule_name      = "allow-ingress-owner-ips"
      description    = "Allow traffic into the VPC from owner primary and secondary IPs"
      enable_logging = true
      match = {
        src_ip_ranges = []
      }
    },
    {
      priority       = "700"
      direction      = "EGRESS"
      action         = "allow"
      rule_name      = "allow-egress-cloud-run-jobs"
      description    = "Allow egress traffic for Cloud Run jobs scraping websites"
      enable_logging = true
      match = {
        dest_ip_ranges = []
      }
    }
  ]
}
```