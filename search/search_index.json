{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Secure Landing Zone (SLZ) in GCP","text":"<p>Welcome to the documentation for setting up a Secure Landing Zone (SLZ) in Google Cloud Platform (GCP).</p>"},{"location":"#table-of-contents","title":"Table of Contents","text":"<ul> <li>The Seed Project</li> <li>Folders Core</li> <li>Groups</li> <li>IAM Groups</li> <li>Organizational Policies</li> <li>Billing Projects</li> <li>CI/CD Projects</li> <li>Shared VPC Projects</li> <li>L&amp;M</li> <li>Terraform State Buckets</li> <li>FAQs</li> </ul>"},{"location":"#business-unit-resources","title":"Business Unit Resources","text":"<ul> <li>Business Unit FAQs</li> <li>Business Unit Folders</li> <li>Business Unit Groups</li> <li>Business Unit Projects</li> </ul>"},{"location":"#terraform-and-github","title":"Terraform and Github","text":"<ul> <li>Terraform State Buckets</li> <li>Variable substitution</li> <li>Secret substitution</li> </ul>"},{"location":"#resources","title":"Resources","text":"<ul> <li>Seed project concept</li> </ul>"},{"location":"#version","title":"Version","text":"<p>0a9fc56 (2023-08-29 17:22:09-06:00) by Joseph Villarreal Lopez</p>"},{"location":"additional-resources/","title":"Aditional resources","text":""},{"location":"additional-resources/#bootstrap-your-google-cloud-foundation-with-terraform-and-gitlab-ci","title":"Bootstrap Your Google Cloud Foundation with Terraform and GitLab CI","text":"<p>This article by Johan Siebens provides a comprehensive guide on how to set up a Google Cloud Foundation using Terraform and GitLab CI. It covers the initial setup, the use of Terraform modules, and the CI/CD pipeline configuration in GitLab.</p>"},{"location":"additional-resources/#google-cloud-foundation-toolkit","title":"Google Cloud Foundation Toolkit","text":"<p>The Google Cloud Foundation Toolkit offers a set of extensible modules and templates to help you create a secure and compliant Google Cloud environment. It focuses on best practices and automating complex tasks, making it easier to manage your cloud infrastructure.</p>"},{"location":"additional-resources/#terraform-example-foundation-on-github","title":"Terraform Example Foundation on GitHub","text":"<p>This GitHub repository provides a collection of sample configurations and modules to help you set up a Google Cloud Foundation using Terraform. It aims to be a practical example of best practices and how to implement them.</p>"},{"location":"additional-resources/#impersonating-service-accounts-in-google-cloud-iam","title":"Impersonating Service Accounts in Google Cloud IAM","text":"<p>This Google Cloud IAM documentation explains the concept and lifecycle of service accounts, focusing on service account impersonation. It details how principals, such as users and other service accounts, can authenticate as service accounts for temporary elevated access.</p>"},{"location":"additional-resources/#terraform-gcp-gitlab-bootstrap-on-github","title":"Terraform GCP GitLab Bootstrap on GitHub","text":"<p>This GitHub repository by jsiebens is designed to set up a Google Cloud Foundation using Terraform and GitLab. Although it lacks a detailed description, the repository contains initial setup files and Terraform modules.</p>"},{"location":"bu-faqs/","title":"FAQs","text":"<p>These snippets together form a comprehensive Terraform code to manage different aspects of Bussines Unit projects, folders, and groups, all within the Google Cloud Platform. Make sure to customize the code according to your specific requirements and organizational structure.</p>"},{"location":"bu-faqs/#adding-new-project-folders-to-a-bussines-unit","title":"Adding New Project Folders to a Bussines Unit","text":"<p>You can create new project folders for a Bussines Unit by defining Terraform modules like <code>projecta_folders</code>, <code>projectbated_folders</code>, and <code>projectc_folders</code>. You can define each folder and its parent entry key using the <code>folders</code> map.</p> <p>Here's a snippet for adding new folders:</p> <pre><code>module \"projecta_folders\" {\nsource = \"../modules/google_folder\"\nfolders = {\n\"BU-projecta\" = { external_parent_id = module.folders.id[\"Bussines Unit\"] },\n...\n}\n}\n</code></pre>"},{"location":"bu-faqs/#adding-new-projects-to-a-bussines-unit","title":"Adding New Projects to a Bussines Unit","text":"<p>You can add new projects to a Bussines Unit by defining Terraform modules like <code>BU_projecta_projects</code>, <code>BU_projectb_projects</code>, and <code>BU_projectc_projects</code>. Each project is mapped to the corresponding folder ID.</p> <p>Here's a snippet for adding new projects:</p> <pre><code>module \"BU_projecta_projects\" {\nfor_each                 = local.filtered_projecta_folders\nsource                   = \"terraform-google-modules/project-factory/google\"\n...\n}\n</code></pre>"},{"location":"bu-faqs/#adding-new-project-state-buckets-to-a-bussines-unit","title":"Adding New Project State Buckets to a Bussines Unit","text":"<p>You can create state buckets for BU projects using modules like <code>BU_projecta_projects_tf_state</code>, <code>BU_projectbated_projects_tf_state</code>, and <code>BU_projectc_projects_tf_state</code>. You can define the bucket properties and IAM members for access.</p> <p>Here's a snippet for adding new project state buckets:</p> <pre><code>module \"BU_projecta_projects_tf_state\" {\nfor_each                 = local.filtered_projecta_buckets\nsource                   = \"terraform-google-modules/cloud-storage/google//modules/simple_bucket\"\n...\n}\n</code></pre>"},{"location":"bu-faqs/#adding-new-project-groups-to-a-bussines-unit","title":"Adding New Project Groups to a Bussines Unit","text":"<p>You can create project groups in BU by defining the <code>project_groups</code> module and combining folders and group types. You can further define members, managers, and owners for each group.</p> <p>Here's a snippet for adding new project groups:</p> <pre><code>module \"project_groups\" {\nfor_each     = { for combination in local.folder_group_combinations : \"${combination.display_name}-${combination.group_type}\" =&gt; combination }\nsource       = \"terraform-google-modules/group/google\"\n...\n}\n</code></pre>"},{"location":"bu-folders/","title":"Terraform Google Folder Structure","text":"<p>This project provides a flexible and scalable folder structure for organizing resources within the Google Cloud Platform.</p>"},{"location":"bu-folders/#modules","title":"Modules","text":""},{"location":"bu-folders/#folders","title":"Folders","text":"<p>The <code>proj_folders</code> module is responsible for managing the folder hierarchy related to data projion. Example usage: <pre><code>module \"proj_folders\" {\nsource = \"../modules/google_folder\"\n  // configuration details\n}\n</code></pre></p>"},{"location":"bu-folders/#dependencies","title":"Dependencies","text":"<ul> <li>Terraform v0.12 or higher</li> <li>Google Cloud Platform account with necessary permissions</li> </ul> <p>Info</p> <p>From this point on the document is autogenerated, don't modify it directly</p>"},{"location":"bu-folders/#code","title":"Code","text":""},{"location":"bu-folders/#project-a","title":"Project A","text":"<p>Creates the required folders for a project: a parent with 6 nested folder environments</p> <pre><code>module \"projecta_folders\" {\nsource = \"../modules/google_folder\"\nfolders = {\n\"${var.owner}-projecta\" = { external_parent_id = module.folders.id[\"BussinesUnits\"] },\n\"${var.owner}-projecta-dev\" = {\nname             = \"dev\"\nparent_entry_key = \"${var.owner}-projecta\"\n},\n\"${var.owner}-projecta-stage\" = {\nname             = \"stage\",\nparent_entry_key = \"${var.owner}-projecta\"\n},\n\"${var.owner}-projecta-qa\" = {\nname             = \"qa\"\nparent_entry_key = \"${var.owner}-projecta\"\n},\n\"${var.owner}-projecta-prodfix\" = {\nname             = \"prodfix\"\nparent_entry_key = \"${var.owner}-projecta\"\n},\n\"${var.owner}-projecta-prod\" = {\nname             = \"prod\"\nparent_entry_key = \"${var.owner}-projecta\"\n},\n\"${var.owner}-projecta-dr\" = {\nname             = \"dr\"\nparent_entry_key = \"${var.owner}-projecta\"\n},\n}\n}\n</code></pre>"},{"location":"bu-folders/#project-b","title":"Project B","text":"<p>Creates the required folders for a project: a parent with 6 nested folder environments</p> <pre><code>module \"projectb_folders\" {\nsource = \"../modules/google_folder\"\nfolders = {\n\"${var.owner}-projectb\" = { external_parent_id = module.folders.id[\"BussinesUnits\"] },\n\"${var.owner}-projectb-dev\" = {\nname             = \"dev\"\nparent_entry_key = \"${var.owner}-projectb\"\n},\n\"${var.owner}-projectb-stage\" = {\nname             = \"stage\",\nparent_entry_key = \"${var.owner}-projectb\"\n},\n\"${var.owner}-projectb-qa\" = {\nname             = \"qa\"\nparent_entry_key = \"${var.owner}-projectb\"\n},\n\"${var.owner}-projectb-prodfix\" = {\nname             = \"prodfix\"\nparent_entry_key = \"${var.owner}-projectb\"\n},\n\"${var.owner}-projectb-prod\" = {\nname             = \"prod\"\nparent_entry_key = \"${var.owner}-projectb\"\n},\n\"${var.owner}-projectb-dr\" = {\nname             = \"dr\"\nparent_entry_key = \"${var.owner}-projectb\"\n},\n}\n}\n</code></pre>"},{"location":"bu-folders/#project-c","title":"Project C","text":"<p>Creates the required folders for a project: a parent with 6 nested folder environments.</p> <pre><code>module \"projectc_folders\" {\nsource = \"../modules/google_folder\"\nfolders = {\n\"${var.owner}-projectc\" = { external_parent_id = module.folders.id[\"BussinesUnits\"] },\n\"${var.owner}-projectc-dev\" = {\nname             = \"dev\"\nparent_entry_key = \"${var.owner}-projectc\"\n},\n\"${var.owner}-projectc-stage\" = {\nname             = \"stage\",\nparent_entry_key = \"${var.owner}-projectc\"\n},\n\"${var.owner}-projectc-qa\" = {\nname             = \"qa\"\nparent_entry_key = \"${var.owner}-projectc\"\n},\n\"${var.owner}-projectc-prodfix\" = {\nname             = \"prodfix\"\nparent_entry_key = \"${var.owner}-projectc\"\n},\n\"${var.owner}-projectc-prod\" = {\nname             = \"prod\"\nparent_entry_key = \"${var.owner}-projectc\"\n},\n\"${var.owner}-projectc-dr\" = {\nname             = \"dr\"\nparent_entry_key = \"${var.owner}-projectc\"\n},\n}\n}\n</code></pre>"},{"location":"bu-groups/","title":"Google Folders and Project Groups Management","text":"<p>This document explains the Terraform code responsible for managing Google folders and project groups within your organization.</p>"},{"location":"bu-groups/#overview","title":"Overview","text":"<p>The code consists of two main parts: 1. Retrieving the Google folders related to a specific project. 2. Creating project groups for various roles (developers, devops, admins) within those folders.</p>"},{"location":"bu-groups/#google-folders","title":"Google Folders","text":"<p>The <code>google_folders</code> data block is responsible for retrieving the folders related to the project identified by <code>module.folders.id[\"Altus\"]</code>.</p> <pre><code>data \"google_folders\" \"my_prj_folders\" {\nparent_id = module.folders.id[\"Altus\"]\n}\n</code></pre> <p>A local variable <code>child_folders</code> is used to store these folders.</p>"},{"location":"bu-groups/#group-combinations","title":"Group Combinations","text":"<p>The <code>locals</code> block creates combinations of folders and groups (developers, devops, admins) and specific members for each group.</p> <pre><code>locals {\nchild_folders = [for folder in data.google_folders.my_prj_folders.folders : folder]\ngroups        = [\"developers\", \"devops\", \"admins\"]\nfolder_group_combinations = flatten([...])\nmembers = {...}\n}\n</code></pre>"},{"location":"bu-groups/#project-groups-module","title":"Project Groups Module","text":"<p>The <code>project_groups</code> module is responsible for creating the Google groups for each folder and group type combination. The source for this module is the Terraform Google Modules group.</p> <pre><code>module \"project_groups\" {\nfor_each     = {...}\nsource       = \"terraform-google-modules/group/google\"\nversion      = \"0.4.0\"\nid           = \"${each.value.display_name}-${each.value.group_type}@${data.google_organization.org.domain}\"\ndisplay_name = \"${each.value.display_name}-${each.value.group_type}\"\ndescription  = \"Group for ${each.value.display_name} ${each.value.group_type}\"\ndomain       = data.google_organization.org.domain\nmanagers     = []\nmembers      = local.members[\"${each.value.display_name}-${each.value.group_type}\"]\nowners       = []\n}\n</code></pre>"},{"location":"bu-groups/#usage","title":"Usage","text":"<p>Apply this code to manage folders and group permissions within your Google Cloud Platform organization.</p> <p>Info</p> <p>From this point on the document is autogenerated, don't modify it directly</p>"},{"location":"bu-groups/#code","title":"Code","text":"<p>Fetching data about Google Cloud folders that are children of the parent folder identified by <code>module.folders.id[\"BussinesUnits\"]</code> using the Google provider in Terraform.</p> <pre><code>data \"google_folders\" \"prj_folders\" {\nparent_id = module.folders.id[\"BussinesUnits\"]\n}\n</code></pre>"},{"location":"bu-groups/#local-values","title":"local values:","text":"<ul> <li><code>child_folders</code> extracts all child folders from the <code>prj_folders</code> data object,</li> <li><code>groups</code> is a list of user groups,</li> <li><code>folder_group_combinations</code> creates a combination of each folder with each group and sets their display name and group type, and <code>members</code> is a map that initializes empty lists for each project-group combination.</li> </ul> <pre><code>locals {\nchild_folders = [for folder in data.google_folders.my_prj_folders.folders : folder]\ngroups        = [\"developers\", \"devops\", \"admins\"]\nfolder_group_combinations = flatten([\nfor folder in local.child_folders : [\nfor group in local.groups : {\ndisplay_name = lower(folder.display_name),\ngroup_type   = group\n}\n]\n])\nmembers = {\nprojecta-developers = []\nprojecta-devops     = []\nprojecta-admins     = []\nprojectb-developers = []\nprojectb-devops     = []\nprojectb-admins     = []\nprojectc-developers = []\nprojectc-devops     = []\nprojectc-admins     = []\n}\n}\n</code></pre> <p>This block of Terraform code creates a Google Group for each combination of folder and group type, with the group's ID, display name, and description being generated based on the owner, display name, and group type, and assigns members from the previously defined <code>members</code> map.</p> <pre><code>module \"project_groups\" {\nfor_each     = { for combination in local.folder_group_combinations : \"${combination.display_name}-${combination.group_type}\" =&gt; combination }\nsource       = \"terraform-google-modules/group/google\"\nversion      = \"0.4.0\"\nid           = \"${each.value.display_name}-${each.value.group_type}@${data.google_organization.org.domain}\"\ndisplay_name = \"${each.value.display_name}-${each.value.group_type}\"\ndescription  = \"Group for ${each.value.display_name} ${each.value.group_type}\"\ndomain       = data.google_organization.org.domain\nmanagers     = []\nmembers      = local.members[\"${split(\"${var.owner}-\", each.value.display_name)[1]}-${each.value.group_type}\"]\nowners       = []\n}\n</code></pre>"},{"location":"bu-projects/","title":"Altus Project Modules Documentation","text":"<p>This document explains the Terraform code responsible for managing Altus ingest, curated, and transformation projects within Google Cloud Platform.</p>"},{"location":"bu-projects/#overview","title":"Overview","text":"<p>The code snippet consists of three distinct modules that handle the creation of projects under filtered folders for ingest, curated, and transformation. Each module uses the Google Project Factory module and filters out specific folders by name.</p>"},{"location":"bu-projects/#local-variables","title":"Local Variables","text":"<p>The code starts by defining local variables that filter out folders based on their names.</p> <pre><code>locals {\nfiltered_ingest_folders  = { for k, v in module.ingest_folders.id : k =&gt; v if k != \"Altus-Ingest\" }\nfiltered_curated_folders = { for k, v in module.curated_folders.id : k =&gt; v if k != \"Altus-Cur\" }\nfiltered_trans_folders   = { for k, v in module.trans_folders.id : k =&gt; v if k != \"Altus-Trans\" }\n}\n</code></pre>"},{"location":"bu-projects/#altus-ingest-projects-module","title":"Altus Ingest Projects Module","text":"<p>This module handles the creation of ingest projects using the filtered ingest folders.</p> <pre><code>module \"altus_ingest_projects\" {\nfor_each                 = local.filtered_ingest_folders\nsource                   = \"terraform-google-modules/project-factory/google\"\nversion                  = \"14.2.0\"\n...\nlabels = {\nterraform_managed = true\n}\n}\n</code></pre>"},{"location":"bu-projects/#altus-curated-projects-module","title":"Altus Curated Projects Module","text":"<p>Similar to the ingest module, this module creates curated projects based on the filtered curated folders.</p> <pre><code>module \"altus_curated_projects\" {\nfor_each                 = local.filtered_curated_folders\n...\nlabels = {\nterraform_managed = true\n}\n}\n</code></pre>"},{"location":"bu-projects/#altus-transformation-projects-module","title":"Altus Transformation Projects Module","text":"<p>This module is responsible for the transformation projects, created under the filtered transformation folders.</p> <pre><code>module \"altus_trans_projects\" {\nfor_each                 = local.filtered_trans_folders\n...\nlabels = {\nterraform_managed = true\n}\n}\n</code></pre>"},{"location":"bu-projects/#usage","title":"Usage","text":"<p>Apply this code to manage Altus ingest, curated, and transformation projects within your Google Cloud Platform organization.</p> <p>Info</p> <p>From this point on the document is autogenerated, don't modify it directly</p>"},{"location":"bu-projects/#code","title":"Code","text":"<p>The code is creating three local variables, each containing a map of folder IDs from different modules (<code>projecta_folders</code>, <code>projectbated_folders</code>, <code>projectc_folders</code>), excluding the folders whose keys match with the owner's project (i.e., <code>\"${var.owner}-projecta\"</code>, <code>\"${var.owner}-projectb\"</code>, and <code>\"${var.owner}-projectc\"</code>). Only the child folders represent projects, the parent is just a unit for IAM</p> <pre><code>locals {\nfiltered_projecta_folders     = { for k, v in module.projecta_folders.id : k =&gt; v if k != \"${var.owner}-projecta\" }\nfiltered_projectbated_folders = { for k, v in module.projectbated_folders.id : k =&gt; v if k != \"${var.owner}-projectb\" }\nfiltered_projectc_folders     = { for k, v in module.projectc_folders.id : k =&gt; v if k != \"${var.owner}-projectc\" }\n}\n</code></pre>"},{"location":"bu-projects/#bussines-unit-projects-project-a","title":"Bussines Unit Projects: Project A","text":"<p>The code is creating a Terraform module named \"owner_projecta_projects\" for each entry in <code>local.filtered_projecta_folders</code>, using the Google Project Factory module, with a random project ID of length 3, specific organization and billing account IDs, folder ID from the filtered list, host project ID from a shared VPC host project module, activation of certain APIs, and a label for billing purposes</p> <pre><code>module \"owner_projecta_projects\" {\nfor_each                 = local.filtered_projecta_folders\nsource                   = \"terraform-google-modules/project-factory/google\"\nversion                  = \"14.2.0\"\nname                     = each.key\nrandom_project_id        = true\nrandom_project_id_length = 3\norg_id                   = var.org_id\nbilling_account          = var.billing_account\nfolder_id                = each.value\nsvpc_host_project_id     = module.shared_vpc_host_project.project_id\nactivate_apis            = var.activate_apis[\"projecta\"]\nlabels = {\nenv = \"prod\"\n}\n}\n</code></pre>"},{"location":"bu-projects/#bussines-unit-projects-project-b","title":"Bussines Unit Projects: Project B","text":"<p>The code is creating a Terraform module named \"owner_projecta_projects\" for each entry in <code>local.filtered_projecta_folders</code>, using the Google Project Factory module, with a random project ID of length 3, specific organization and billing account IDs, folder ID from the filtered list, host project ID from a shared VPC host project module, activation of certain APIs, and a label for billing purposes</p> <pre><code>module \"owner_projectbated_projects\" {\nfor_each                 = local.filtered_projectbated_folders\nsource                   = \"terraform-google-modules/project-factory/google\"\nversion                  = \"14.2.0\"\nname                     = each.key\nrandom_project_id        = true\nrandom_project_id_length = 3\norg_id                   = var.org_id\nbilling_account          = var.billing_account\nfolder_id                = each.value\nsvpc_host_project_id     = module.shared_vpc_host_project.project_id\nactivate_apis            = var.activate_apis[\"projectb\"]\nlabels = {\nenv = \"prod\"\n}\n}\n</code></pre>"},{"location":"bu-projects/#bussines-unit-projects-project-c","title":"Bussines Unit Projects: Project C","text":"<p>The code is creating a Terraform module named \"owner_projecta_projects\" for each entry in <code>local.filtered_projecta_folders</code>, using the Google Project Factory module, with a random project ID of length 3, specific organization and billing account IDs, folder ID from the filtered list, host project ID from a shared VPC host project module, activation of certain APIs, and a label for billing purposes</p> <pre><code>module \"owner_projectc_projects\" {\nfor_each                 = local.filtered_projectc_folders\nsource                   = \"terraform-google-modules/project-factory/google\"\nversion                  = \"14.2.0\"\nname                     = each.key\nrandom_project_id        = true\nrandom_project_id_length = 3\norg_id                   = var.org_id\nbilling_account          = var.billing_account\nfolder_id                = each.value\nsvpc_host_project_id     = module.shared_vpc_host_project.project_id\nactivate_apis            = var.activate_apis[\"projectc\"]\nlabels = {\nenv = \"prod\"\n}\n}\n</code></pre>"},{"location":"seed/","title":"The Seed Project","text":""},{"location":"seed/#gcp-terraform-seed","title":"GCP Terraform Seed","text":""},{"location":"seed/#overview","title":"Overview","text":"<p>This Terraform code is designed to provision the foundational setup for Google Cloud Platform (GCP) project, services, and service accounts required for Terraform. It also handles the roles and permissions for the Terraform service account.</p>"},{"location":"seed/#seed-project-concept","title":"Seed Project Concept","text":""},{"location":"seed/#what-is-a-seed-project","title":"What is a Seed Project?","text":"<p>A seed project is essentially a starting point for your infrastructure. It sets up the basic resources and permissions you need to build out your environments. This includes setting up IAM roles and Federation to run code.</p> <p>The service account created here is used by the CICD pipeline agents through impersonation to create and manage GCP resources.</p>"},{"location":"seed/#why-is-it-important","title":"Why is it Important?","text":"<p>The seed project is crucial because it lays the foundation for all your future projects and configurations. It ensures that you have a secure, scalable, and maintainable infrastructure by delegating this roles to an impersonatable agent.</p>"},{"location":"seed/#key-components","title":"Key Components","text":"<ul> <li>GCP Seed project</li> <li>Terraform service Account</li> <li>IAM Roles at Organization level</li> <li>IAM Roles at Seed Project level</li> <li>Workload Identity federation</li> </ul>"},{"location":"seed/#usage","title":"Usage","text":"<ol> <li>Initialization: An admin user needs to login using the CLI or manually apply the code in this file.</li> <li>State Migration: After the initial implementation, the state for the code is stored in a cloud storage bucket.</li> </ol>"},{"location":"seed/#requisites","title":"Requisites","text":"<ul> <li>A Google Cloud Platform account with sufficient permissions.</li> <li>Terraform installed in the local machine.</li> </ul>"},{"location":"seed/#order-of-execution","title":"Order of Execution","text":"<ol> <li>Activation of APIs: Flatten and set the required APIs.</li> <li>Project Creation: Setup a GCP project using the \"terraform-google-modules/project-factory/google\" module.</li> <li>Service Account Creation: Define a service account used by Terraform.</li> <li>Roles Assignment: Set up the roles for the Terraform service account on the organization and project levels.</li> <li>Workload Identity Federation: Setup Workload Identity Federation for GitHub actions.</li> <li>Workload Identity Binding: Apply the identity binding.</li> </ol>"},{"location":"seed/#logic","title":"Logic","text":"<ul> <li>The <code>locals</code> block defines the APIs to be activated.</li> <li>The <code>module \"org_seed_project\"</code> sets up the project.</li> <li>The <code>resource \"google_service_account\"</code> creates the service account.</li> <li>IAM roles are managed through modules <code>\"terraform_sa_organization_iam_bindings\"</code> and <code>\"terraform_sa_project_iam_bindings\"</code>.</li> <li>Workload Identity Federation and binding are handled with specific resources.</li> </ul>"},{"location":"seed/#notes","title":"Notes","text":"<ul> <li>Make sure to uncomment the key block if needed for initial manual bootstrapping.</li> <li>The repository paths and roles can be adjusted as needed.</li> </ul> <p>Info</p> <p>From this point on the document is autogenerated, don't modify it directly</p>"},{"location":"seed/#code","title":"Code","text":""},{"location":"seed/#local-variables","title":"Local Variables","text":"<p>The Seed project needs to have all the APIs defined in var.activate_apis enabled not only for the project itself but for every child project</p> <ul> <li>add all APIs</li> <li>remove duplicates</li> </ul> <pre><code>locals {\nactivate_apis_all = toset(flatten(values(var.activate_apis)))\n}\n</code></pre>"},{"location":"seed/#module-org-seed-project","title":"Module: Org Seed Project","text":"<p>This Terraform module, <code>org_seed_project</code>, is used to create a Google Cloud Project with specific configurations using the Project Factory module, without creating a random project ID, a default service account, or a network, but activating certain APIs.</p> <pre><code>module \"org_seed_project\" {\nsource                  = \"terraform-google-modules/project-factory/google\"\nversion                 = \"14.2.0\"\nrandom_project_id       = \"false\"\ndefault_service_account = \"delete\"\ncreate_project_sa       = false\nname                    = \"${var.owner}-seed-prj\"\norg_id                  = var.org_id\nbilling_account         = var.billing_account\nauto_create_network     = false\nactivate_apis           = local.activate_apis_all\nlabels = {\nterraform_managed = true\n}\n}\n</code></pre>"},{"location":"seed/#resource-google-service-account","title":"Resource: Google Service Account","text":"<p>This Terraform code creates a Google Cloud Service Account named <code>Terraform Service Account</code> with the account ID <code>tf_seed_sa</code> in the project created by the <code>org_seed_project</code> module.</p> <pre><code>resource \"google_service_account\" \"tf_seed_sa\" {\naccount_id   = \"tf_seed_sa\"\ndisplay_name = \"Terraform Service Account\"\nproject      = module.org_seed_project.project_id\n}\n</code></pre>"},{"location":"seed/#resource-google-service-account-key","title":"Resource: Google Service Account Key","text":"<p>This Terraform code generates a new private key for the <code>tf_seed_sa</code> Google Cloud Service Account and stores it in <code>google_service_account_key</code> named <code>account_key</code>.</p> <pre><code>resource \"google_service_account_key\" \"account_key\" {\nservice_account_id = google_service_account.service_account.name\n}\n</code></pre>"},{"location":"seed/#module-terraform-service-account-org-iam-bindings","title":"Module: Terraform Service Account Org IAM Bindings","text":"<ol> <li> <p><code>\"roles/resourcemanager.organizationAdmin\"</code>: necessary for the service account to manage organization-wide resources effectively.</p> </li> <li> <p><code>\"roles/resourcemanager.projectCreator\"</code>: allows the service account to create new projects within the organization.</p> </li> <li> <p><code>\"roles/resourcemanager.folderAdmin\"</code>: grants administrative access to manage folders within the organization.</p> </li> <li> <p><code>\"roles/compute.xpnAdmin\"</code>: allows the service account to manage network resources across projects.</p> </li> <li> <p><code>\"roles/serviceusage.serviceUsageAdmin\"</code>: allows enabling or disabling various Google Cloud services across projects.</p> </li> <li> <p><code>\"roles/billing.user\"</code>: allows the service account to view and manage billing information.</p> </li> <li> <p><code>\"roles/iam.serviceAccountAdmin\"</code>: grants administrative access to manage service accounts.</p> </li> </ol> <pre><code>module \"tf_seed_sa_organization_iam_bindings\" {\nsource        = \"terraform-google-modules/iam/google//modules/organizations_iam\"\nversion       = \"7.6.0\"\norganizations = [var.org_id]\nmode          = \"additive\"\nbindings = {\n\"roles/resourcemanager.organizationAdmin\" = [\"serviceAccount:${google_service_account.tf_seed_sa.email}\"],\n\"roles/resourcemanager.projectCreator\"    = [\"serviceAccount:${google_service_account.tf_seed_sa.email}\"],\n\"roles/resourcemanager.folderAdmin\"       = [\"serviceAccount:${google_service_account.tf_seed_sa.email}\"],\n\"roles/compute.xpnAdmin\"                  = [\"serviceAccount:${google_service_account.tf_seed_sa.email}\"],\n\"roles/serviceusage.serviceUsageAdmin\"    = [\"serviceAccount:${google_service_account.tf_seed_sa.email}\"],\n\"roles/billing.user\"                      = [\"serviceAccount:${google_service_account.tf_seed_sa.email}\"],\n\"roles/iam.serviceAccountAdmin\"           = [\"serviceAccount:${google_service_account.tf_seed_sa.email}\"],\n}\n}\n</code></pre>"},{"location":"seed/#module-terraform-service-account-project-iam-bindings","title":"Module: Terraform Service Account Project IAM Bindings","text":"<ol> <li> <p><code>\"roles/serviceusage.serviceUsageAdmin\"</code>: relevant for enabling or disabling specific Google Cloud services within the project.</p> </li> <li> <p><code>\"roles/iam.serviceAccountKeyAdmin\"</code>: The service account might need to manage its own keys.</p> </li> <li> <p><code>\"roles/iam.serviceAccountAdmin\"</code>: If the service account needs to manage other service accounts at the project level, is necessary.</p> </li> <li> <p><code>\"roles/iam.serviceAccountTokenCreator\"</code>: service account needs to create tokens for other service accounts.</p> </li> <li> <p><code>\"roles/iam.workloadIdentityUser\"</code>: allows the service account to act as a workload identity user.</p> </li> <li> <p><code>\"roles/iam.workloadIdentityPoolAdmin\"</code>: allows the service account to manage id pools.</p> </li> <li> <p><code>\"roles/storage.objectCreator\"</code>: Permission to create objects in Cloud Storage.</p> </li> <li> <p><code>\"roles/storage.objectViewer\"</code>: provides read access to objects in Cloud Storage.</p> </li> <li> <p><code>\"roles/storage.admin\"</code>: It includes permissions to create, delete, and modify storage buckets and objects.</p> </li> </ol> <pre><code>module \"tf_seed_sa_project_iam_bindings\" {\nsource   = \"terraform-google-modules/iam/google//modules/projects_iam\"\nversion  = \"7.6.0\"\nprojects = [module.org_seed_project.project_id]\nmode     = \"additive\"\nbindings = {\n\"roles/serviceusage.serviceUsageAdmin\" = [\"serviceAccount:${google_service_account.tf_seed_sa.email}\"],\n\"roles/iam.serviceAccountKeyAdmin\"     = [\"serviceAccount:${google_service_account.tf_seed_sa.email}\"],\n\"roles/iam.serviceAccountAdmin\"        = [\"serviceAccount:${google_service_account.tf_seed_sa.email}\"],\n\"roles/iam.serviceAccountTokenCreator\" = [\"serviceAccount:${google_service_account.tf_seed_sa.email}\"],\n\"roles/iam.workloadIdentityUser\"       = [\"serviceAccount:${google_service_account.tf_seed_sa.email}\"],\n\"roles/iam.workloadIdentityPoolAdmin\"  = [\"serviceAccount:${google_service_account.tf_seed_sa.email}\"],\n\"roles/storage.objectCreator\"          = [\"serviceAccount:${google_service_account.tf_seed_sa.email}\"],\n\"roles/storage.objectViewer\"           = [\"serviceAccount:${google_service_account.tf_seed_sa.email}\"],\n\"roles/storage.admin\"                  = [\"serviceAccount:${google_service_account.tf_seed_sa.email}\"],\n}\n}\n</code></pre>"},{"location":"seed/#identity-pool","title":"Identity Pool","text":"<p>This Terraform code creates a new Google Cloud IAM Workload Identity Pool with the ID <code>github-terraformer</code> in the specified project, and stores it in <code>google_iam_workload_identity_pool</code> named <code>idp_pool</code>.</p> <pre><code>resource \"google_iam_workload_identity_pool\" \"idp_pool\" {\nworkload_identity_pool_id = \"github-terraformer\"\nproject                   = module.org_seed_project.project_id\n}\n</code></pre>"},{"location":"seed/#resource-google-iam-workload-identity-pool-provider","title":"Resource: Google IAM Workload Identity Pool Provider","text":"<p>This Terraform code creates a new Google Cloud IAM Workload Identity Pool Provider for the identity pool <code>github-terraformer</code>, and configures it with an empty list of allowed audiences, an Github issuer URI, and attribute mappings for OIDC (OpenID Connect).</p> <pre><code>resource \"google_iam_workload_identity_pool_provider\" \"gh_provider\" {\nworkload_identity_pool_id          = \"github-terraformer\"\nworkload_identity_pool_provider_id = \"gh-actions\"\ndisplay_name                       = \"gh-actions\"\noidc {\nallowed_audiences = []\nissuer_uri        = \"https://token.actions.githubusercontent.com\"\n}\nattribute_mapping = {\n\"google.subject\"       = \"assertion.sub\"\n\"attribute.actor\"      = \"assertion.actor\"\n\"attribute.repository\" = \"assertion.repository\"\n}\n}\n</code></pre>"},{"location":"seed/#google-service-account-iam-binding","title":"Google Service Account IAM Binding","text":"<p>Member repos can impersonate the terraform SA via github actions. When possible add one repo at a time, or:</p> <ul> <li>Uncomment A to allow all client repos to impersonate the terraform SA</li> <li>Uncomment B to use Use Workload Identity with Google Kubernetes Engine, once for each namespace</li> </ul> <pre><code>resource \"google_service_account_iam_binding\" \"workload_identity_binding\" {\nservice_account_id = google_service_account.service_account.id\nrole               = \"roles/iam.workloadIdentityUser\"\nmembers = [\n\"principalSet://iam.googleapis.com/projects/${module.org_seed_project.project_number}/locations/global/workloadIdentityPools/github-terraformer/attribute.repository/${var.owner}/${var.owner}-slz\",\n\"principalSet://iam.googleapis.com/projects/${module.org_seed_project.project_number}/locations/global/workloadIdentityPools/github-terraformer/attribute.repository/${var.owner}/${var.owner}-shared-infra\",\n\"principalSet://iam.googleapis.com/projects/${module.org_seed_project.project_number}/locations/global/workloadIdentityPools/github-terraformer/attribute.repository/${var.owner}/${var.owner}-projecta-infra\",\n\"principalSet://iam.googleapis.com/projects/${module.org_seed_project.project_number}/locations/global/workloadIdentityPools/github-terraformer/attribute.repository/${var.owner}/${var.owner}-projectc-infra\",\n\"principalSet://iam.googleapis.com/projects/${module.org_seed_project.project_number}/locations/global/workloadIdentityPools/github-terraformer/attribute.repository/${var.owner}/${var.owner}-projectb-infra\",\n    # A: \"principalSet://iam.googleapis.com/projects/${module.org_seed_project.project_number}/locations/global/workloadIdentityPools/github-terraformer/attribute.repository_${var.owner}/${var.owner}-Power\",\n    # B: \"serviceAccount:${module.org_seed_project.project_id}.svc.id.goog[${NAMESPACE}/${var.service_account}]\",\n]\n}\n</code></pre>"},{"location":"slz-faqs/","title":"FAQs","text":""},{"location":"slz-faqs/#how-to-add-a-new-folder-to-the-slz-core-folders-module","title":"How to add a new folder to the SLZ core folders module","text":"<p>Adding a new folder to the <code>folders</code> module with Terraform is straightforward. You can simply add a new key-value pair inside the <code>folders</code> map, following the existing structure. this would only be necesary to add a folder to the SLZ, all projects are nested inside the ALtus Folder from alt-folders.tf</p> <p>Here's an example of how you could add a new folder named \"MYCHILDFOLDER\" as a child of the Shared Folder:</p> <pre><code>module \"folders\" {\nsource = \"../modules/google_folder\"\nfolders = {\n\"Core\"               = { external_parent_id = \"organizations/${var.org_id}\" },\n\"Billing\"            = { parent_entry_key = \"Core\" },\n\"Logging-Monitoring\" = { parent_entry_key = \"Core\" },\n\"Security\"           = { parent_entry_key = \"Core\" },\n\"Network\"            = { parent_entry_key = \"Core\" },\n\"Shared\"             = { external_parent_id = \"organizations/${var.org_id}\" },\n\"Shared-Prod\"        = { parent_entry_key = \"Shared\" },\n\"Shared-NonProd\"     = { parent_entry_key = \"Shared\" },\n\"Altus\" = {\nname               = \"Altus\"\nexternal_parent_id = \"organizations/${var.org_id}\"\n},\n\"MYROOTFOLDER\"        = { \"organizations/${var.org_id}\" } // New root folder added here\n\"MYCHILDFOLDER\"        = { parent_entry_key = \"Shared\" } // New child folder added here\n}\n}\nresource \"random_string\" \"suffix\" {\nlength  = 3\nspecial = false\nupper   = false\n}\n</code></pre> <p>In this example, the new \"MYCHILDFOLDER\" folder is set as a child of the \"Shared\" folder by referencing the <code>parent_entry_key</code>. You can customize the parent and other attributes according to your needs.</p> <p>In this example, the new \"MYROOTFOLDER\" folder is set as a child of the ORG folder by referencing the <code>organizations/${var.org_id}</code>. You can customize the parent and other attributes according to your needs.</p>"},{"location":"slz-faqs/#how-do-i-modify-or-add-slz-groups","title":"How Do I Modify or Add SLZ Groups?","text":"<p>Modifying or adding SLZ groups can be achieved by modifying or adding a new module definition for the desired group. Here's an example to add a new group named \"GCP Custom Admins\":</p> <pre><code>module \"custom_admins\" {\nsource       = \"terraform-google-modules/group/google\"\nversion      = \"0.4.0\"\nid           = \"custom-admins@${data.google_organization.org.domain}\"\ndisplay_name = \"GCP Custom Admins\"\ndescription  = \"Group for GCP Custom Administrators\"\ndomain       = data.google_organization.org.domain\nmanagers     = []\nmembers      = [\"john.doe@yourdomain.com\"]\nowners       = []\n}\n</code></pre>"},{"location":"slz-faqs/#how-do-i-modify-or-add-slz-groups-members","title":"How Do I Modify or Add SLZ Groups Members?","text":"<p>You can add or modify members by updating the <code>members</code> attribute within the desired group's module. Here's an example to add a new member to the \"GCP Admins\" group:</p> <pre><code>module \"gcp_admins\" {\n...\nmembers      = [\"joseph.villarreal@66degrees.com\", \"john.doe@yourdomain.com\"] // Added new member here\n...\n}\n</code></pre>"},{"location":"slz-faqs/#how-do-i-modify-or-add-slz-groups-members-roles","title":"How Do I Modify or Add SLZ Groups Members Roles?","text":"<p>Modifying or adding roles can be done by updating or adding the <code>bindings</code> attribute within the corresponding IAM module. Here's an example to add a new role to the \"GCP Admins\" group:</p> <pre><code>module \"gcp-admins\" {\n...\nbindings = {\n\"roles/resourcemanager.organizationAdmin\" = [\n\"group:${module.gcp_admins.id}\",\n]\n\"roles/iam.securityAdmin\" = [\n\"group:${module.gcp_admins.id}\",\n]\n\"roles/billing.admin\" = [\n\"group:${module.gcp_admins.id}\",\n]\n\"roles/custom.admin\" = [ // Added new role here\n\"group:${module.gcp_admins.id}\",\n]\n}\n}\n</code></pre> <p>Remember to replace <code>\"roles/custom.admin\"</code> with the actual role that you want to add or modify.</p>"},{"location":"slz-faqs/#modifying-organization-policies","title":"Modifying Organization Policies","text":"<p>Enable/Disable Policies: You can enable or disable a specific organization policy by modifying the <code>enforcement</code> attribute within the module definition. Set it to <code>true</code> to enable and <code>false</code> to disable. Here's an example:</p> <pre><code>module \"restrict_vpc_peering\" {\n  // ...\nrules = [{\nenforcement = false // Setting this to true will enable the policy\n    // ...\n}]\n  // ...\n}\n</code></pre> <p>Modify Policy Rules: You can add or modify rules by editing the <code>rules</code> attribute. Here's an example of how you can modify an existing policy:</p> <pre><code>module \"restrict_public_ip_cloudsql\" {\n  // ...\nrules = [{\nenforcement = true\nallow       = [\"allowed_value1\", \"allowed_value2\"]\ndeny        = [\"denied_value1\", \"denied_value2\"]\nconditions  = [] // You can define conditions here\n}]\n  // ...\n}\n</code></pre>"},{"location":"slz-faqs/#adding-organization-policies","title":"Adding Organization Policies","text":"<p>To add a new organization policy, you can create a new module using the existing pattern. Here's an example for a hypothetical policy:</p> <pre><code>module \"new_policy\" {\nsource = \"../modules/org-policy\"\npolicy_root    = \"organization\"\npolicy_root_id = var.org_id\nrules = [{\nenforcement = true\nallow       = []\ndeny        = []\nconditions  = []\n}]\nconstraint  = \"constraints/your.newConstraint\"\npolicy_type = \"boolean\" // or \"list\" depending on the policy type\n}\n</code></pre>"},{"location":"slz-faqs/#how-to-modify-existing-budgets","title":"How to Modify Existing Budgets","text":"<p>To modify an existing budget, you can make changes to the existing module definition for the budget you wish to alter. Here's how you can update the amount and alerts for the production budget:</p> <pre><code>module \"budget_prod_projects\" {\n  // ...\n  amount                 = \"2000\" // Updating the budget amount\n  alert_spent_percents   = [0.4, 0.6, 0.8, 1.0] // Updating the alert percentages\n  // ...\n}\n</code></pre> <p>You can also modify other attributes like <code>display_name</code>, <code>credit_types_treatment</code>, <code>alert_pubsub_topic</code>, etc., based on your requirements.</p>"},{"location":"slz-faqs/#how-to-add-new-budgets","title":"How to Add New Budgets","text":"<p>To add a new budget, you can replicate the pattern used for existing budgets and define a new module for the budget. Here's an example for adding a new development budget:</p> <pre><code># Development budget topic\nresource \"google_pubsub_topic\" \"dev_budget\" {\n  name    = \"altus-dev-budget-topic-${random_string.suffix.result}\"\n  project = module.billing_project.project_id\n}\n\nmodule \"budget_dev_projects\" {\n  source                 = \"terraform-google-modules/project-factory/google//modules/budget\"\n  billing_account        = var.billing_account\n  projects               = [module.billing_project.project_id]\n  amount                 = \"500\"\n  display_name           = \"Budget for ${module.billing_project.project_id} (Development)\"\n  alert_spent_percents   = [0.5, 0.8, 1.0]\n  credit_types_treatment = \"INCLUDE_ALL_CREDITS\"\n  alert_pubsub_topic     = \"projects/${module.billing_project.project_id}/topics/${google_pubsub_topic.dev_budget.name}\"\n  labels = {\n    \"env\" : \"dev\"\n  }\n}\n</code></pre>"},{"location":"slz-faqs/#creating-new-cicd-cloud-build-pipelines-and-triggers-in-the-cicd-project-for-a-project-in-the-org","title":"Creating New CI/CD Cloud Build Pipelines and Triggers in the CICD Project for a Project in the Org","text":"<p>To create a new Cloud Build pipeline, you will need to create a build trigger and define the build steps. Here's an example of how you can do that:</p> <pre><code>resource \"google_cloudbuild_trigger\" \"my_trigger\" {\n  project  = module.cicd.project_id\n  name     = \"my-trigger-name\"\n  description = \"My build trigger\"\n\n  github {\n    owner  = \"my-org\"\n    name   = \"my-repo\"\n    push {\n      branch = \"^master$\"\n    }\n  }\n\n  filename = \"cloudbuild.yaml\"\n}\n\nresource \"google_cloudbuild_build\" \"my_build\" {\n  project_id = module.cicd.project_id\n  timeout    = \"1800s\"\n\n  source {\n    repo_source {\n      project_id  = \"my-project-id\"\n      repo_name   = \"my-repo\"\n      branch_name = \"master\"\n    }\n  }\n\n  steps {\n    name = \"gcr.io/cloud-builders/docker\"\n    args = [\"build\", \"--tag=gcr.io/$PROJECT_ID/$REPO_NAME:$SHORT_SHA\", \".\"]\n  }\n\n  images = [\"gcr.io/$PROJECT_ID/$REPO_NAME:$SHORT_SHA\"]\n}\n</code></pre> <p>This code snippet sets up a build trigger that will start a Cloud Build pipeline when changes are pushed to the master branch of the specified GitHub repository.</p>"},{"location":"slz-faqs/#using-the-cicd-project-shared-artifact-registry-from-a-project","title":"Using the CICD Project Shared Artifact Registry from a Project","text":"<p>To use the shared Artifact Registry from a project, you can refer to the Artifact Registry repository that you have created in the CICD project. The IAM bindings module you've defined already gives write permissions to the specified service accounts.</p> <p>Here's how you can push a Docker image to the shared Artifact Registry:</p> <pre><code>resource \"google_cloudbuild_build\" \"push_to_artifact_registry\" {\n  project_id = module.cicd.project_id\n  timeout    = \"1800s\"\n\n  source {\n    repo_source {\n      project_id  = \"my-project-id\"\n      repo_name   = \"my-repo\"\n      branch_name = \"master\"\n    }\n  }\n\n  steps {\n    name = \"gcr.io/cloud-builders/docker\"\n    args = [\"build\", \"--tag=us-central1-docker.pkg.dev/${module.cicd.project_id}/altus-docker/my-image:$SHORT_SHA\", \".\"]\n    args = [\"push\", \"us-central1-docker.pkg.dev/${module.cicd.project_id}/altus-docker/my-image:$SHORT_SHA\"]\n  }\n}\n</code></pre> <p>This code snippet pushes a Docker image to the shared Artifact Registry that you created in the CICD project.</p>"},{"location":"slz-faqs/#what-does-the-shared_vpc_host_project-module-do","title":"What does the <code>shared_vpc_host_project</code> module do?","text":"<p>The <code>shared_vpc_host_project</code> module creates a new Google Cloud Project configured to act as a Shared VPC host project. It sets up specific properties such as project name, organization ID, billing account, and folder ID, and enables the shared VPC host project feature. Labels such as <code>terraform_managed</code> and <code>network_host</code> are applied to identify the project easily.</p>"},{"location":"slz-faqs/#how-is-the-pre-production-vpc-configured","title":"How is the pre-production VPC configured?","text":"<p>The pre-production VPC is configured through the <code>preprod_vpc_shared_vpc_host</code> module. It specifies the network name, routing mode, and includes a detailed configuration of subnets, secondary IP ranges, and routes. The subnets are tailored for various MYCHILDFOLDER, QA, staging, and production fixes. Secondary IP ranges are specified for specific subnets, and a route is created for egress through the internet gateway.</p>"},{"location":"slz-faqs/#how-is-private-service-access-configured-for-the-pre-production-vpc","title":"How is Private Service Access configured for the pre-production VPC?","text":"<p>Private Service Access for the pre-production VPC is configured through three resources:</p> <ol> <li><code>google_compute_global_address</code>: Defines the global address for VPC peering with a specific IP range.</li> <li><code>google_service_networking_connection</code>: Creates a connection to the Google Service Networking API and sets up the VPC peering.</li> <li><code>google_compute_network_peering_routes_config</code>: Configures the route import/export for the peering connection.</li> </ol> <p>This setup allows managed services like VertexAI, CloudSQL, Cloudbuild, etc., to have IP addresses within the VPC.</p>"},{"location":"slz-faqs/#what-is-the-purpose-of-the-google_vpc_access_connector-resource","title":"What is the purpose of the <code>google_vpc_access_connector</code> resource?","text":"<p>The <code>google_vpc_access_connector</code> resource creates a VPC access connector in the specified region, which enables connections between your VPC network and the product that requires VPC connector, such as Cloud Functions, App Engine, and Cloud Run. In this code, it's named \"vpcconn-preprod\" and is configured for the \"nonprod-vpc-con-us-east4\" subnet.</p>"},{"location":"slz-faqs/#how-is-the-cloud-nat-configured-for-the-pre-production-vpc","title":"How is the Cloud NAT configured for the pre-production VPC?","text":"<p>The Cloud NAT for the pre-production VPC is configured using the <code>cloud-nat</code> module. It includes the project ID, network, and region, and specifies the router and name for the Cloud NAT. Cloud NAT allows virtual machine instances in the VPC network to send outbound packets to the internet and receive any corresponding established inbound response packets.</p>"},{"location":"slz-faqs/#how-is-the-production-vpc-configured","title":"How is the production VPC configured?","text":"<p>The production VPC is configured through the <code>prod_vpc_shared_vpc_host</code> module. Similar to the pre-production VPC, it specifies the network name, routing mode, subnets, secondary IP ranges, and routes. The subnets are tailored for production and disaster recovery, with dedicated subnets for VPC connectors. Routes are created for egress through the internet gateway.</p>"},{"location":"slz-faqs/#modifying-a-vpc","title":"Modifying a VPC","text":"<p>You can modify a VPC by adjusting the parameters within the existing VPC module. For instance, to change the routing mode of the <code>preprod-vpc</code>, update the <code>routing_mode</code> field:</p> <pre><code>module \"preprod_vpc_shared_vpc_host\" {\n...\nrouting_mode = \"REGIONAL\" # Change from GLOBAL to REGIONAL\n...\n}\n</code></pre>"},{"location":"slz-faqs/#adding-a-vpc","title":"Adding a VPC","text":"<p>To add a new VPC, you can create a new instance of the VPC module:</p> <pre><code>module \"new_vpc\" {\nsource                                 = \"terraform-google-modules/network/google\"\nproject_id                             = module.shared_vpc_host_project.project_id\nnetwork_name                           = \"new-vpc\"\nrouting_mode                           = \"GLOBAL\"\n...\n}\n</code></pre>"},{"location":"slz-faqs/#modifying-a-subnet","title":"Modifying a Subnet","text":"<p>To modify a subnet, you can edit the corresponding subnet details inside the VPC module. For example, to change the IP range of a specific subnet:</p> <pre><code>module \"preprod_vpc_shared_vpc_host\" {\n...\nsubnets = [\n{\nsubnet_name = \"altus-trans-dev-us-east4\"\nsubnet_ip   = \"192.168.100.0/24\" # Change the IP range\n...\n},\n]\n...\n}\n</code></pre>"},{"location":"slz-faqs/#adding-a-subnet","title":"Adding a Subnet","text":"<p>To add a subnet, you can simply append a new subnet entry within the <code>subnets</code> list inside the VPC module:</p> <pre><code>module \"preprod_vpc_shared_vpc_host\" {\n...\nsubnets = [\n...\n{\nsubnet_name           = \"new-subnet\"\nsubnet_ip             = \"192.168.50.0/24\"\nsubnet_region         = \"us-east4\"\n...\n},\n]\n...\n}\n</code></pre>"},{"location":"slz-faqs/#modifying-a-firewall-rule","title":"Modifying a Firewall Rule","text":"<p>To modify a firewall rule, you would define or modify a firewall resource. However, the provided code snippet doesn't include a firewall rule, so here's a general way to modify one:</p> <pre><code>resource \"google_compute_firewall\" \"my_firewall\" {\n...\nallow {\nprotocol = \"tcp\"\nports    = [\"80\", \"443\"] # Modify the allowed ports\n}\n...\n}\n</code></pre>"},{"location":"slz-faqs/#adding-a-firewall-rule","title":"Adding a Firewall Rule","text":"<p>To add a firewall rule, you can define a new firewall resource:</p> <pre><code>resource \"google_compute_firewall\" \"new_firewall\" {\nname    = \"new-firewall-rule\"\nnetwork = module.prod_vpc_shared_vpc_host.network_name\nallow {\nprotocol = \"tcp\"\nports    = [\"22\"]\n}\n}\n</code></pre> <p>Make sure to carefully review and apply these changes to suit your specific requirements, and run <code>terraform plan</code> and <code>terraform apply</code> to apply the changes.</p>"},{"location":"slz-folders-core/","title":"Secure Landing Zone Folder Structure","text":""},{"location":"slz-folders-core/#overview","title":"Overview","text":"<p>This code snippet defines a hierarchical folder structure within Google Cloud Platform, designed to be a core component of a secure landing zone strategy. The folder structure promotes segregation of responsibilities and isolation of different environment aspects, such as billing, logging, security, networking, and shared resources.</p>"},{"location":"slz-folders-core/#secure-landing-zone-context","title":"Secure Landing Zone Context","text":"<p>The design emphasizes security by:</p> <ul> <li>Isolating Responsibilities: By segregating resources into dedicated folders, you minimize the risk of unintended access or modifications.</li> <li>Scalable Organization: This structure allows for expandable management and the easy addition of more departments, projects, or environmental divisions.</li> <li>Hierarchical Access Control: Implementing IAM policies at different folder levels provides fine-grained control, supporting the principle of least privilege.</li> <li>Auditability: The Logging and Monitoring folder can be configured to centralize logs, improving visibility and compliance.</li> </ul>"},{"location":"slz-folders-core/#module-folders","title":"Module: Folders","text":"<pre><code>Organizations\n\u251c\u2500\u2500 Seed\n\u2502\n\u251c\u2500\u2500 Core/\n\u2502   \u251c\u2500\u2500 Billing\n\u2502   \u251c\u2500\u2500 Logging-Monitoring\n\u2502   \u251c\u2500\u2500 Security\n\u2502   \u2514\u2500\u2500 Network\n\u2502\n\u251c\u2500\u2500 Shared/\n\u2502   \u251c\u2500\u2500 Shared-Prod\n\u2502   \u2514\u2500\u2500 Shared-NonProd\n\u2502\n\u2514\u2500\u2500 BussinesUnits/*\n</code></pre> <p>Info</p> <p>From this point on the document is autogenerated, don't modify it directly</p>"},{"location":"slz-folders-core/#code","title":"Code","text":""},{"location":"slz-folders-core/#folder-structure","title":"Folder Structure","text":"<ul> <li>Organizations: The root level, representing your organization on Google Cloud Platform.</li> <li>Core: A foundational folder for critical organizational resources. subfolders:</li> <li>Billing: Managing billing accounts and related information.</li> <li>Logging-Monitoring: Segregating logging and monitoring resources.</li> <li>Security: Holds security-related configurations and policies.</li> <li>Network: For managing network-related resources.</li> <li>Shared: A folder hosting shared resources with subfolders for production and non-production environments.</li> <li>BussinesUnits: Businnes Unit. this folder or folders holds all projects.</li> </ul> <pre><code>module \"folders\" {\nsource = \"../modules/google_folder\"\nfolders = {\n\"Core\"               = { external_parent_id = \"organizations/${var.org_id}\" },\n\"Billing\"            = { parent_entry_key = \"Core\" },\n\"Logging-Monitoring\" = { parent_entry_key = \"Core\" },\n\"Security\"           = { parent_entry_key = \"Core\" },\n\"Network\"            = { parent_entry_key = \"Core\" },\n\"Shared\"             = { external_parent_id = \"organizations/${var.org_id}\" },\n\"Shared-Prod\"        = { parent_entry_key = \"Shared\" },\n\"Shared-NonProd\"     = { parent_entry_key = \"Shared\" },\n\"BussinesUnits\" = {\nname               = \"BussinesUnits\"\nexternal_parent_id = \"organizations/${var.org_id}\"\n},\n}\n}\n</code></pre>"},{"location":"slz-groups-iam/","title":"IAM Groups","text":""},{"location":"slz-groups-iam/#role-assignments-for-administrative-groups-in-secure-landing-zone","title":"Role Assignments for Administrative Groups in Secure Landing Zone","text":"<p>In a GCP organization, the secure management of resources requires clear delineation of responsibilities among different administrative roles. This code snippet defines the IAM role bindings for various administrative groups within the organization, ensuring alignment with the SLZ's security principles.</p> <p>By carefully attaching the appropriate roles to administrative groups, this code maintains a secure and effective governance structure. The implementation follows the SLZ principles, ensuring that access controls are applied precisely where needed and aligning with the organization's broader security strategy.</p>"},{"location":"slz-groups-iam/#role-bindings","title":"Role Bindings","text":""},{"location":"slz-groups-iam/#1-gcp-admins","title":"1. GCP Admins","text":"<p>This module attaches the following roles to the <code>gcp_admins</code> group:</p> <ul> <li>Organization Admin: Full control over the organization's resources.</li> <li>IAM Security Admin: Manages security settings.</li> <li>Billing Admin: Manages billing configuration.</li> </ul> <pre><code>module \"gcp-admins\" {}\n</code></pre>"},{"location":"slz-groups-iam/#2-security-admins","title":"2. Security Admins","text":"<p>Assigns the IAM Security Admin role for managing security settings within the \"Security\" folder.</p> <pre><code>module \"security-admins\" {}\n</code></pre>"},{"location":"slz-groups-iam/#3-network-admins","title":"3. Network Admins","text":"<p>Responsible for network management within the \"Network\" folder, the group is assigned the following roles:</p> <ul> <li>Compute Network Admin: Manages network resources.</li> <li>VPC Access Admin: Administers VPC access controls.</li> </ul> <pre><code>module \"network-admins\" {}\n</code></pre>"},{"location":"slz-groups-iam/#4-audit-admins","title":"4. Audit Admins","text":"<p>Within the \"Logging-Monitoring\" folder, this group is assigned roles for security review and log viewing:</p> <ul> <li>IAM Security Reviewer: Access to review security settings.</li> <li>Logging Viewer: Access to view logs.</li> </ul> <pre><code>module \"audit-admins\" {}\n</code></pre>"},{"location":"slz-groups-iam/#5-project-admins","title":"5. Project Admins","text":"<p>This module assigns various roles within the \"Altus\" and \"Shared\" folders, providing comprehensive permissions to manage projects:</p> <ul> <li>Editor: General editing capabilities.</li> <li>IAM Service Account Admin: Manages service accounts.</li> <li>IAM Service Account Token Creator: Creates service account tokens.</li> <li>Artifact Registry Admin: Full control over Artifact Registry resources.</li> <li>Artifact Registry Repo Admin: Manages Artifact Registry repositories.</li> </ul> <pre><code>module \"project-admins\" {}\n</code></pre> <p>Info</p> <p>From this point on the document is autogenerated, don't modify it directly</p>"},{"location":"slz-groups-iam/#code","title":"Code","text":"<pre><code>module \"gcp-admins\" {\nsource        = \"terraform-google-modules/iam/google//modules/organizations_iam\"\nversion       = \"7.6.0\"\norganizations = [var.org_id]\nmode          = \"additive\"\nbindings = {\n\"roles/resourcemanager.organizationAdmin\" = [\n\"group:${module.gcp_admins.id}\",\n]\n\"roles/iam.securityAdmin\" = [\n\"group:${module.gcp_admins.id}\",\n]\n\"roles/billing.admin\" = [\n\"group:${module.gcp_admins.id}\",\n]\n}\n}\n</code></pre> <pre><code>module \"security-admins\" {\nsource  = \"terraform-google-modules/iam/google//modules/folders_iam\"\nversion = \"7.6.0\"\nfolders = [module.folders.id[\"Security\"]]\nmode    = \"additive\"\nbindings = {\n\"roles/iam.securityAdmin\" = [\n\"group:${module.security_admins.id}\",\n]\n}\n}\n</code></pre> <pre><code>module \"network-admins\" {\nsource  = \"terraform-google-modules/iam/google//modules/folders_iam\"\nversion = \"7.6.0\"\nfolders = [module.folders.id[\"Network\"]]\nmode    = \"additive\"\nbindings = {\n\"roles/compute.networkAdmin\" = [\n\"group:${module.network_admins.id}\",\n]\n\"roles/vpcaccess.admin\" = [\n\"group:${module.security_admins.id}\",\n]\n}\n}\n</code></pre> <pre><code>module \"audit-admins\" {\nsource  = \"terraform-google-modules/iam/google//modules/folders_iam\"\nversion = \"7.6.0\"\nfolders = [module.folders.id[\"Logging-Monitoring\"]]\nmode    = \"additive\"\nbindings = {\n\"roles/iam.securityReviewer\" = [\n\"group:${module.audit_admins.id}\",\n],\n\"roles/logging.viewer\" = [\n\"group:${module.audit_admins.id}\",\n]\n}\n}\n</code></pre> <pre><code>module \"project-admins\" {\nsource  = \"terraform-google-modules/iam/google//modules/folders_iam\"\nversion = \"7.6.0\"\nfolders = [module.folders.id[\"owner\"], module.folders.id[\"Shared\"]]\nmode    = \"additive\"\nbindings = {\n\"roles/editor\" = [\n\"serviceAccount:${google_service_account.service_account.email}\",\n\"group:${module.project_admins.id}\",\n]\n\"roles/iam.serviceAccountAdmin\" = [\n\"serviceAccount:${google_service_account.service_account.email}\",\n\"group:${module.project_admins.id}\",\n]\n\"roles/iam.serviceAccountTokenCreator\" = [\n\"serviceAccount:${google_service_account.service_account.email}\",\n\"group:${module.project_admins.id}\",\n]\n\"roles/artifactregistry.admin\" = [\n\"serviceAccount:${google_service_account.service_account.email}\",\n\"group:${module.project_admins.id}\",\n]\n\"roles/artifactregistry.repoAdmin\" = [\n\"serviceAccount:${google_service_account.service_account.email}\",\n\"group:${module.project_admins.id}\",\n]\n}\n}\n</code></pre>"},{"location":"slz-groups/","title":"Groups","text":""},{"location":"slz-groups/#documentation-for-secure-landing-zone-administrative-groups","title":"Documentation for Secure Landing Zone Administrative Groups","text":"<p>These group configurations form an essential part of the Secure Landing Zone, ensuring a well-structured and secure access control hierarchy. By segregating permissions and adhering to the principle of least privilege, the implementation promotes an organized and robust security posture within the GCP environment.</p>"},{"location":"slz-groups/#introduction","title":"Introduction","text":"<p>This part of the SLZ implementation defines different groups within your GCP organization. By adhering to the principle of least privilege, we ensure that users and services have the minimum levels of access required to perform their duties.</p> <p>Danger<p>In order to mantain this implementation as an effective and secure landing zone on GCP, you should consider the principle of least privilege,   where you should grant only the necessary access to users, groups and services to perform their tasks.</p> </p>"},{"location":"slz-groups/#groups-overview","title":"Groups Overview","text":"<p>The following are the key administrative groups designed to manage various aspects of the organization:</p> <p>Info</p> <p>From this point on the document is autogenerated, don't modify it directly</p>"},{"location":"slz-groups/#code","title":"Code","text":""},{"location":"slz-groups/#1-gcp-admins","title":"1. GCP Admins:","text":"<p>Members of this group will have broad permissions across the entire org.  The number of members on this group should be limited.</p> <pre><code>module \"gcp_admins\" {\nsource       = \"terraform-google-modules/group/google\"\nversion      = \"0.4.0\"\nid           = \"admins@${data.google_organization.org.domain}\"\ndisplay_name = \"GCP Admins\"\ndescription  = \"Group for GCP Administrators\"\ndomain       = data.google_organization.org.domain\nmanagers     = []\nmembers      = []\nowners       = []\n}\n</code></pre>"},{"location":"slz-groups/#2-security-admins","title":"2. Security Admins:","text":"<p>Responsible for security settings, such as configuring IAM and organization policies.   Members of this group will have permissions related to security settings,   like configuring Identity and Access Management (IAM), organization policies, etc.</p> <pre><code>module \"security_admins\" {\nsource       = \"terraform-google-modules/group/google\"\nversion      = \"0.4.0\"\nid           = \"security-admins@${data.google_organization.org.domain}\"\ndisplay_name = \"GCP Security Admins\"\ndescription  = \"Group for GCP Security Administrators\"\ndomain       = data.google_organization.org.domain\nmanagers     = []\nmembers      = []\nowners       = []\n}\n</code></pre>"},{"location":"slz-groups/#3-network-admins","title":"3. Network Admins:","text":"<p>Manages network resources like VPCs, subnets, and firewall rules.   This group is responsible for the management of network resources such as VPCs,   subnets, firewall rules, etc.</p> <pre><code>module \"network_admins\" {\nsource       = \"terraform-google-modules/group/google\"\nversion      = \"0.4.0\"\nid           = \"network-admins@${data.google_organization.org.domain}\"\ndisplay_name = \"GCP Network Admins\"\ndescription  = \"Group for GCP Network Administrators\"\ndomain       = data.google_organization.org.domain\nmanagers     = []\nmembers      = []\nowners       = []\n}\n</code></pre>"},{"location":"slz-groups/#4-audit-admins","title":"4. Audit Admins:","text":"<p>Has permissions to view all resources and settings for auditing and compliance.   Members of this group will have permissions to view all resources and settings,   meant for auditing and compliance purposes.</p> <pre><code>module \"audit_admins\" {\nsource       = \"terraform-google-modules/group/google\"\nversion      = \"0.4.0\"\nid           = \"audit-admins@${data.google_organization.org.domain}\"\ndisplay_name = \"GCP Audit Admins\"\ndescription  = \"Group for GCP Audit Administrators\"\ndomain       = data.google_organization.org.domain\nmanagers     = []\nmembers      = []\nowners       = []\n}\n</code></pre>"},{"location":"slz-groups/#5-project-admins","title":"5. Project Admins:","text":"<p>A global grant to manage all projects in the organization. Individual project management is delegated to dedicated groups (see alt-groups.tf).  This is a global grant to manage all projects in the ORG.   we have dedicated groups to manage each project individually. see alt-groups.tf</p> <pre><code>module \"project_admins\" {\nsource       = \"terraform-google-modules/group/google\"\nversion      = \"0.4.0\"\nid           = \"project-admins@${data.google_organization.org.domain}\"\ndisplay_name = \"GCP Project Admins\"\ndescription  = \"Group for GCP Project Administrators\"\ndomain       = data.google_organization.org.domain\nmanagers     = []\nmembers      = []\nowners       = []\n}\n</code></pre>"},{"location":"slz-org-policy/","title":"Organizational Policies","text":""},{"location":"slz-org-policy/#organizational-policy-modules-in-secure-landing-zone","title":"Organizational Policy Modules in Secure Landing Zone","text":"<p>These Terraform modules enforce specific constraints and policies within an SLZ, enhancing the security and compliance posture of your GCP organization.</p> <p>These Terraform modules define crucial security constraints and policies in alignment with best practices. The modules play an essential role in the Secure Landing Zone, aiding in enforcing compliance requirements and enhancing the overall security posture of the GCP environment.</p>"},{"location":"slz-org-policy/#modules","title":"Modules","text":""},{"location":"slz-org-policy/#1-skip-default-network-creation","title":"1. Skip Default Network Creation","text":"<p>Prevents the automatic creation of a default network in new projects.</p> <pre><code>module \"skip_default_network\" {\nconstraint = \"constraints/compute.skipDefaultNetworkCreation\"\n  // Other configurations...\n}\n</code></pre>"},{"location":"slz-org-policy/#2-uniform-bucket-level-access","title":"2. Uniform Bucket Level Access","text":"<p>Enforces uniform bucket-level access control across all Cloud Storage buckets.</p> <pre><code>module \"uniform_bucket_level_access\" {\nconstraint = \"constraints/storage.uniformBucketLevelAccess\"\n  // Other configurations...\n}\n</code></pre>"},{"location":"slz-org-policy/#3-enforce-bucket-public-access-prevention","title":"3. Enforce Bucket Public Access Prevention","text":"<p>Prevents public access to Cloud Storage buckets.</p> <pre><code>module \"enforce_bucket_public_access_prevention\" {\nconstraint = \"constraints/storage.publicAccessPrevention\"\n  // Other configurations...\n}\n</code></pre>"},{"location":"slz-org-policy/#4-disable-vm-serial-ports","title":"4. Disable VM Serial Ports","text":"<p>Disables the global serial port access to VM instances.</p> <pre><code>module \"disable_vm_serial_ports\" {\nconstraint = \"constraints/compute.disableGlobalSerialPortAccess\"\n  // Other configurations...\n}\n</code></pre>"},{"location":"slz-org-policy/#5-restrict-shared-vpc-project-lien","title":"5. Restrict Shared VPC Project Lien","text":"<p>Restricts the removal of shared VPC project liens.</p> <pre><code>module \"restrict_shared_vpc_project_lien\" {\nconstraint = \"constraints/compute.restrictXpnProjectLienRemoval\"\n  // Other configurations...\n}\n</code></pre>"},{"location":"slz-org-policy/#6-restrict-public-ip-cloudsql","title":"6. Restrict Public IP CloudSQL","text":"<p>Disallows public IP addresses for Cloud SQL instances.</p> <pre><code>module \"restrict_public_ip_cloudsql\" {\nconstraint = \"constraints/sql.restrictPublicIp\"\n  // Other configurations...\n}\n</code></pre>"},{"location":"slz-org-policy/#7-disable-vm-nested-virtualization","title":"7. Disable VM Nested Virtualization","text":"<p>Prevents the use of nested virtualization in VM instances.</p> <pre><code>module \"disable_vm_nested_virtualization\" {\nconstraint = \"constraints/compute.disableNestedVirtualization\"\n  // Other configurations...\n}\n</code></pre>"},{"location":"slz-org-policy/#8-disable-guest-attributes-access","title":"8. Disable Guest Attributes Access","text":"<p>Blocks access to guest attributes in VM instances.</p> <pre><code>module \"disable_guest_attributes\" {\nconstraint = \"constraints/compute.disableGuestAttributesAccess\"\n  // Other configurations...\n}\n</code></pre>"},{"location":"slz-org-policy/#9-require-os-login","title":"9. Require OS Login","text":"<p>Enforces OS login for SSH access to VM instances.</p> <pre><code>module \"require_os_login\" {\nconstraint = \"constraints/compute.requireOsLogin\"\n  // Other configurations...\n}\n</code></pre>"},{"location":"slz-org-policy/#10-domain-restricted-sharing","title":"10. Domain Restricted Sharing","text":"<p>Restricts sharing to specific domains.</p> <pre><code>module \"domain_restricted_sharing\" {\nconstraint = \"constraints/iam.allowedPolicyMemberDomains\"\n  // Other configurations...\n}\n</code></pre>"},{"location":"slz-org-policy/#11-restrict-vm-external-ip","title":"11. Restrict VM External IP","text":"<p>Prohibits external IP access for VM instances.</p> <pre><code>module \"restrict_vm_external_ip\" {\nconstraint = \"constraints/compute.vmExternalIpAccess\"\n  // Other configurations...\n}\n</code></pre>"},{"location":"slz-org-policy/#12-restrict-vpc-peering","title":"12. Restrict VPC Peering","text":"<p>Limits VPC peering connections.</p> <pre><code>module \"restrict_vpc_peering\" {\nconstraint = \"constraints/compute.restrictVpcPeering\"\n  // Other configurations...\n}\n</code></pre>"},{"location":"slz-org-policy/#13-restrict-shared-vpc-host-projects","title":"13. Restrict Shared VPC Host Projects","text":"<p>Restricts the creation of shared VPC host projects.</p> <pre><code>module \"restrict_vpc_host_projects\" {\nconstraint = \"constraints/compute.restrictSharedVpcHostProjects\"\n  // Other configurations...\n}\n</code></pre>"},{"location":"slz-org-policy/#14-disable-service-account-key-creation","title":"14. Disable Service Account Key Creation","text":"<p>Prevents the creation of service account keys.</p> <pre><code>module \"disable_service_account_key_creation\" {\nconstraint = \"constraints/iam.disableServiceAccountKeyCreation\"\n  // Other configurations...\n}\n</code></pre>"},{"location":"slz-org-policy/#15-disable-service-account-key-upload","title":"15. Disable Service Account Key Upload","text":"<p>Disallows the upload of service account keys.</p> <pre><code>module \"disable_service_account_key_upload\" {\nconstraint = \"constraints/iam.disableServiceAccountKeyUpload\"\n  // Other configurations...\n}\n</code></pre> <p>Info</p> <p>From this point on the document is autogenerated, don't modify it directly</p>"},{"location":"slz-org-policy/#code","title":"Code","text":"<pre><code>module \"skip_default_network\" {\nsource = \"../modules/org-policy\"\npolicy_root    = \"organization\"\npolicy_root_id = var.org_id\nrules = [{\nenforcement = true\nallow       = []\ndeny        = []\nconditions  = []\n}]\nconstraint  = \"constraints/compute.skipDefaultNetworkCreation\"\npolicy_type = \"boolean\"\n}\n</code></pre> <pre><code>module \"uniform_bucket_level_access\" {\nsource = \"../modules/org-policy\"\npolicy_root    = \"organization\"\npolicy_root_id = var.org_id\nrules = [{\nenforcement = true\nallow       = []\ndeny        = []\nconditions  = []\n}]\nconstraint  = \"constraints/storage.uniformBucketLevelAccess\"\npolicy_type = \"boolean\"\n}\n</code></pre> <pre><code>module \"enforce_bucket_public_access_prevention\" {\nsource = \"../modules/org-policy\"\npolicy_root    = \"organization\"\npolicy_root_id = var.org_id\nrules = [{\nenforcement = true\nallow       = []\ndeny        = []\nconditions  = []\n}]\nconstraint  = \"constraints/storage.publicAccessPrevention\"\npolicy_type = \"boolean\"\n}\n</code></pre> <pre><code>module \"disable_vm_serial_ports\" {\nsource = \"../modules/org-policy\"\npolicy_root    = \"organization\"\npolicy_root_id = var.org_id\nrules = [{\nenforcement = true\nallow       = []\ndeny        = []\nconditions  = []\n}]\nconstraint  = \"constraints/compute.disableGlobalSerialPortAccess\"\npolicy_type = \"boolean\"\n}\n</code></pre> <pre><code>module \"restrict_shared_vpc_project_lien\" {\nsource = \"../modules/org-policy\"\npolicy_root    = \"organization\"\npolicy_root_id = var.org_id\nrules = [{\nenforcement = false\nallow       = []\ndeny        = []\nconditions  = []\n}]\nconstraint  = \"constraints/compute.restrictXpnProjectLienRemoval\"\npolicy_type = \"boolean\"\n}\n</code></pre> <pre><code>module \"restrict_public_ip_cloudsql\" {\nsource = \"../modules/org-policy\"\npolicy_root    = \"organization\"\npolicy_root_id = var.org_id\nrules = [{\nenforcement = true\nallow       = []\ndeny        = []\nconditions  = []\n}]\nconstraint  = \"constraints/sql.restrictPublicIp\"\npolicy_type = \"boolean\"\n}\n</code></pre> <pre><code>module \"disable_vm_nested_virtualization\" {\nsource = \"../modules/org-policy\"\npolicy_root    = \"organization\"\npolicy_root_id = var.org_id\nrules = [{\nenforcement = true\nallow       = []\ndeny        = []\nconditions  = []\n}]\nconstraint  = \"constraints/compute.disableNestedVirtualization\"\npolicy_type = \"boolean\"\n}\n</code></pre> <pre><code>module \"disable_guest_attributes\" {\nsource = \"../modules/org-policy\"\npolicy_root    = \"organization\"\npolicy_root_id = var.org_id\nrules = [{\nenforcement = true\nallow       = []\ndeny        = []\nconditions  = []\n}]\nconstraint  = \"constraints/compute.disableGuestAttributesAccess\"\npolicy_type = \"boolean\"\n}\n</code></pre> <pre><code>module \"require_os_login\" {\nsource = \"../modules/org-policy\"\npolicy_root    = \"organization\"\npolicy_root_id = var.org_id\nrules = [{\nenforcement = true\nallow       = []\ndeny        = []\nconditions  = []\n}]\nconstraint  = \"constraints/compute.requireOsLogin\"\npolicy_type = \"boolean\"\n}\n</code></pre> <pre><code>module \"domain_restricted_sharing\" {\nsource = \"../modules/org-policy\"\npolicy_root    = \"organization\"\npolicy_root_id = var.org_id\nrules = [{\nenforcement = false\nallow       = []\ndeny        = []\nconditions  = []\n}]\nconstraint  = \"constraints/iam.allowedPolicyMemberDomains\"\npolicy_type = \"list\"\n}\n</code></pre> <pre><code>module \"restrict_vm_external_ip\" {\nsource = \"../modules/org-policy\"\npolicy_root    = \"organization\"\npolicy_root_id = var.org_id\nrules = [{\nenforcement = true\nallow       = []\ndeny        = []\nconditions  = []\n}]\nconstraint  = \"constraints/compute.vmExternalIpAccess\"\npolicy_type = \"list\"\n}\n</code></pre> <pre><code>module \"restrict_vpc_peering\" {\nsource = \"../modules/org-policy\"\npolicy_root    = \"organization\"\npolicy_root_id = var.org_id\nrules = [{\nenforcement = false\nallow       = []\ndeny        = []\nconditions  = []\n}]\nconstraint  = \"constraints/compute.restrictVpcPeering\"\npolicy_type = \"list\"\n}\n</code></pre> <pre><code>module \"restrict_vpc_host_projects\" {\nsource = \"../modules/org-policy\"\npolicy_root    = \"organization\"\npolicy_root_id = var.org_id\nrules = [{\nenforcement = false\nallow       = []\ndeny        = []\nconditions  = []\n}]\nconstraint  = \"constraints/compute.restrictSharedVpcHostProjects\"\npolicy_type = \"list\"\n}\n</code></pre> <pre><code>module \"disable_service_account_key_creation\" {\nsource = \"../modules/org-policy\"\npolicy_root    = \"organization\"\npolicy_root_id = var.org_id\nrules = [{\nenforcement = true\nallow       = []\ndeny        = []\nconditions  = []\n}]\nconstraint  = \"constraints/iam.disableServiceAccountKeyCreation\"\npolicy_type = \"boolean\"\n}\n</code></pre> <pre><code>module \"disable_service_account_key_upload\" {\nsource = \"../modules/org-policy\"\npolicy_root    = \"organization\"\npolicy_root_id = var.org_id\nrules = [{\nenforcement = true\nallow       = []\ndeny        = []\nconditions  = []\n}]\nconstraint  = \"constraints/iam.disableServiceAccountKeyUpload\"\npolicy_type = \"boolean\"\n}\n</code></pre>"},{"location":"slz-projects-billing/","title":"Billing Module","text":"<p>This module provisions a billing project with separate budgets for production and preproduction environments, adhering to the specific SLZ requirements.</p>"},{"location":"slz-projects-billing/#requirements","title":"Requirements","text":"<ul> <li>Terraform 0.14 or higher</li> <li>Google Cloud Platform account</li> <li>Billing account associated with the organization</li> </ul>"},{"location":"slz-projects-billing/#modules","title":"Modules","text":""},{"location":"slz-projects-billing/#billing_project","title":"<code>billing_project</code>","text":"<p>Creates a project specifically for billing purposes.</p> <ul> <li><code>name</code>: Name of the billing project.</li> <li><code>random_project_id</code>: Generates a random project ID.</li> <li><code>random_project_id_length</code>: Length of the random project ID.</li> <li><code>org_id</code>: Organization ID.</li> <li><code>folder_id</code>: Folder ID for billing.</li> <li><code>billing_account</code>: Billing account.</li> <li><code>budget_amount</code>: Total budget amount.</li> <li><code>default_service_account</code>: Set to \"disable\" to disable the default service account.</li> <li><code>activate_apis</code>: APIs to be activated for billing.</li> <li><code>labels</code>: Environment labels such as \"prod\" and \"preprod.\"</li> </ul>"},{"location":"slz-projects-billing/#budget_prod_projects","title":"<code>budget_prod_projects</code>","text":"<p>Defines the production budget with specific alert thresholds.</p> <ul> <li><code>amount</code>: Budget amount.</li> <li><code>display_name</code>: Display name of the budget.</li> <li><code>alert_spent_percents</code>: List of percentages at which to send alerts.</li> <li><code>credit_types_treatment</code>: Include all credits in the budget calculation.</li> <li><code>alert_pubsub_topic</code>: Pub/Sub topic for sending budget alerts.</li> </ul>"},{"location":"slz-projects-billing/#budget_preprod_projects","title":"<code>budget_preprod_projects</code>","text":"<p>Defines the preproduction budget with specific alert thresholds. The parameters are similar to the <code>budget_prod_projects</code> module.</p>"},{"location":"slz-projects-billing/#resources","title":"Resources","text":""},{"location":"slz-projects-billing/#google_pubsub_topic","title":"<code>google_pubsub_topic</code>","text":"<p>Defines the Pub/Sub topics for production (<code>prod_budget</code>) and preproduction (<code>preprod_budget</code>) budget alerts.</p>"},{"location":"slz-projects-billing/#usage","title":"Usage","text":"<p>Include this module in your existing Terraform configuration and provide the necessary variables.</p>"},{"location":"slz-projects-billing/#compliance-with-slz","title":"Compliance with SLZ","text":"<p>This configuration is aligned with the specific Service Level Zones requirements, ensuring that the appropriate policies and constraints are enforced.</p> <p>Info</p> <p>From this point on the document is autogenerated, don't modify it directly</p>"},{"location":"slz-projects-billing/#code","title":"Code","text":"<pre><code>module \"billing_project\" {\nsource                   = \"terraform-google-modules/project-factory/google\"\nversion                  = \"14.2.0\"\nname                     = \"owner-cor-billing\"\nrandom_project_id        = true\nrandom_project_id_length = 3\norg_id                   = var.org_id\nfolder_id                = module.folders.id[\"Billing\"]\nbilling_account          = var.billing_account\nbudget_amount            = \"1000\"\ndefault_service_account  = \"disable\"\nactivate_apis = var.activate_apis[\"Billing\"]\nlabels = {\n\"env\" : \"prod\"\n}\n}\n</code></pre>"},{"location":"slz-projects-billing/#prod-budget-with-more-options","title":"Prod budget with more options","text":"<pre><code>resource \"google_pubsub_topic\" \"prod_budget\" {\nname    = \"owner-prod-budget-topic-${random_string.suffix.result}\"\nproject = module.billing_project.project_id\n}\n</code></pre> <pre><code>module \"budget_prod_projects\" {\nsource                 = \"terraform-google-modules/project-factory/google//modules/budget\"\nversion                = \"14.3.0\"\nbilling_account        = var.billing_account\nprojects               = [module.billing_project.project_id]\namount                 = \"1000\"\ndisplay_name           = \"Budget for ${module.billing_project.project_id}\"\nalert_spent_percents   = [0.5, 0.7, 1.0]\ncredit_types_treatment = \"INCLUDE_ALL_CREDITS\"\nalert_pubsub_topic     = \"projects/${module.billing_project.project_id}/topics/${google_pubsub_topic.prod_budget.name}\"\nlabels = {\n\"env\" : \"prod\"\n}\n}\n</code></pre>"},{"location":"slz-projects-billing/#preprod-budget-with-more-options","title":"Preprod budget with more options","text":"<pre><code>resource \"google_pubsub_topic\" \"preprod_budget\" {\nname    = \"owner-preprod-budget-topic-${random_string.suffix.result}\"\nproject = module.billing_project.project_id\n}\n</code></pre> <pre><code>module \"budget_preprod_projects\" {\nsource                 = \"terraform-google-modules/project-factory/google//modules/budget\"\nversion                = \"14.3.0\"\nbilling_account        = var.billing_account\nprojects               = [module.billing_project.project_id]\namount                 = \"1000\"\ndisplay_name           = \"Budget for ${module.billing_project.project_id}\"\nalert_spent_percents   = [0.5, 0.7, 1.0]\ncredit_types_treatment = \"INCLUDE_ALL_CREDITS\"\nalert_pubsub_topic     = \"projects/${module.billing_project.project_id}/topics/${google_pubsub_topic.preprod_budget.name}\"\nlabels = {\n\"env\" : \"prod\"\n}\n}\n</code></pre>"},{"location":"slz-projects-cicd/","title":"CI/CD Module","text":"<p>This module sets up a CI/CD pipeline using Google Cloud services, integrated within the Service Level Zones (SLZ) architecture.</p>"},{"location":"slz-projects-cicd/#requirements","title":"Requirements","text":"<ul> <li>Terraform 0.14 or higher</li> <li>Google Cloud Platform account</li> <li>Billing account associated with the organization</li> </ul>"},{"location":"slz-projects-cicd/#modules","title":"Modules","text":""},{"location":"slz-projects-cicd/#cicd","title":"<code>cicd</code>","text":"<p>Defines the CI/CD project in GCP.</p> <ul> <li><code>name</code>: Name of the CI/CD project.</li> <li><code>random_project_id</code>: Generates a random project ID.</li> <li><code>random_project_id_length</code>: Length of the random project ID.</li> <li><code>org_id</code>: Organization ID.</li> <li><code>billing_account</code>: Billing account.</li> <li><code>folder_id</code>: Folder ID for shared resources.</li> <li><code>svpc_host_project_id</code>: Shared VPC host project ID.</li> <li><code>activate_apis</code>: APIs to be activated for CI/CD.</li> <li><code>labels</code>: Labels, such as <code>terraform_managed</code>.</li> </ul>"},{"location":"slz-projects-cicd/#artifact-registry-repository-iam-bindings","title":"<code>artifact-registry-repository-iam-bindings</code>","text":"<p>Manages IAM bindings for the Artifact Registry repository.</p> <ul> <li><code>repositories</code>: List of Artifact Registry repositories.</li> <li><code>location</code>: Region of the repositories.</li> <li><code>mode</code>: IAM mode, typically <code>additive</code>.</li> <li><code>bindings</code>: IAM roles and members.</li> </ul>"},{"location":"slz-projects-cicd/#cloudbuild-iam-bindings","title":"<code>cloudbuild-iam-bindings</code>","text":"<p>Manages IAM bindings for Cloud Build.</p> <ul> <li><code>projects</code>: List of projects.</li> <li><code>mode</code>: IAM mode, typically <code>additive</code>.</li> <li><code>bindings</code>: IAM roles and members.</li> </ul>"},{"location":"slz-projects-cicd/#resources","title":"Resources","text":""},{"location":"slz-projects-cicd/#google_artifact_registry_repository","title":"<code>google_artifact_registry_repository</code>","text":"<p>Defines the Docker Artifact Registry repository.</p> <ul> <li><code>location</code>: Location of the repository.</li> <li><code>repository_id</code>: ID of the repository.</li> <li><code>description</code>: Description of the repository.</li> <li><code>format</code>: Format of the repository, usually <code>DOCKER</code>.</li> </ul>"},{"location":"slz-projects-cicd/#compliance-with-slz","title":"Compliance with SLZ","text":"<p>The configuration adheres to SLZ principles by ensuring appropriate separation of concerns, permissions, and integration within the overall architecture.</p>"},{"location":"slz-projects-cicd/#usage","title":"Usage","text":"<p>Include this module in your existing Terraform configuration and provide the necessary variables.</p> <p>Info</p> <p>From this point on the document is autogenerated, don't modify it directly</p>"},{"location":"slz-projects-cicd/#code","title":"Code","text":"<pre><code>module \"cicd\" {\nsource                   = \"terraform-google-modules/project-factory/google\"\nversion                  = \"14.2.0\"\nname                     = \"owner-cicd\"\nrandom_project_id        = true\nrandom_project_id_length = 3\norg_id                   = var.org_id\nbilling_account          = var.billing_account\nfolder_id                = module.folders.id[\"Shared\"]\nsvpc_host_project_id     = module.shared_vpc_host_project.project_id\nactivate_apis            = var.activate_apis[\"CICD\"]\nlabels = {\nterraform_managed = true\n}\n}\n</code></pre>"},{"location":"slz-projects-log-monitor/","title":"L&M","text":"<p>Info</p> <p>From this point on the document is autogenerated, don't modify it directly</p>"},{"location":"slz-projects-log-monitor/#code","title":"Code","text":"<pre><code>locals {\nmain_logs_filter = &lt;&lt;EOF\n    logName: /logs/cloudaudit.googleapis.com%2Factivity OR\n    logName: /logs/cloudaudit.googleapis.com%2Fsystem_event OR\n    logName: /logs/compute.googleapis.com%2Fvpc_flows OR\n    logName: /logs/compute.googleapis.com%2Ffirewall OR\n    logName: /logs/cloudaudit.googleapis.com%2Faccess_transparency\nEOF\nall_logs_filter  = \"\"\n}\n</code></pre> <pre><code>module \"org_monitoring_project\" {\nsource                  = \"terraform-google-modules/project-factory/google\"\nversion                 = \"14.2.0\"\nrandom_project_id       = \"true\"\nname                    = \"logging-monitoring-${random_string.suffix.result}\"\norg_id                  = var.org_id\nbilling_account         = var.billing_account\nfolder_id               = module.folders.id[\"Logging-Monitoring\"]\ndefault_service_account = \"disable\"\nactivate_apis           = []\nlabels = {\nterraform_managed = true\n}\n}\n</code></pre> <pre><code>resource \"google_monitoring_dashboard\" \"logging_dashboards\" {\nfor_each       = fileset(path.module, \"dashboards.json\") #local.json_file\nproject        = module.org_monitoring_project.project_id\ndashboard_json = file(each.key)\n}\n</code></pre>"},{"location":"slz-projects-log-monitor/#add-this-to-projects-that-need-to-be-monitored","title":"Add this to projects that need to be monitored","text":"<pre><code># resource \"google_monitoring_monitored_project\" \"primary\" {\n#   metrics_scope = \"change-to-existing-metrics-scope-project\"\n#   name          = \"logging-monitoring-3953\"\n# }\n*****************************************\nSend logs to Storage\n****************************************\nmodule \"storage_destination\" {\nsource                      = \"terraform-google-modules/log-export/google//modules/storage\"\nversion                     = \"~&gt; 7.3.0\"\nproject_id                  = module.org_monitoring_project.project_id\nstorage_bucket_name         = \"sd-bkt-${module.org_monitoring_project.project_id}-org-logs-${random_string.suffix.result}\"\nlog_sink_writer_identity    = module.log_export_to_storage.writer_identity\nuniform_bucket_level_access = true\nlifecycle_rules = [\n{\naction = {\ntype = \"Delete\"\n}\ncondition = {\nage        = 365\nwith_state = \"ANY\"\n}\n},\n{\naction = {\ntype          = \"SetStorageClass\"\nstorage_class = \"COLDLINE\"\n}\ncondition = {\nage        = 180\nwith_state = \"ANY\"\n}\n}\n]\n}\n</code></pre> <pre><code>module \"log_export_to_storage\" {\nsource          = \"terraform-google-modules/log-export/google\"\nversion         = \"~&gt; 7.3.0\"\ndestination_uri = module.storage_destination.destination_uri\n  #   filter                 = local.all_logs_filter\nlog_sink_name          = \"bmcd_logging_bkt\"\nparent_resource_id     = var.org_id\nparent_resource_type   = \"organization\"\ninclude_children       = true\nunique_writer_identity = true\n}\n</code></pre>"},{"location":"slz-projects-sharedvpc/","title":"Altus-Cor Shared VPC and Networks Configuration","text":"<p>This Terraform module is designed to set up the Shared VPC host project and network configuration for the Altus-Cor environment, aligned with the Service Landing Zone (SLZ) concept.</p>"},{"location":"slz-projects-sharedvpc/#modules","title":"Modules","text":""},{"location":"slz-projects-sharedvpc/#1-shared-vpc-host-project","title":"1. Shared VPC Host Project","text":"<p>This module creates the host project for the Shared VPC, using the Terraform Google Project Factory module.</p> <pre><code>module \"shared_vpc_host_project\" {\n...\n}\n</code></pre>"},{"location":"slz-projects-sharedvpc/#2-preprod-vpc","title":"2. Preprod VPC","text":"<p>This module defines the Preprod Virtual Private Cloud (VPC) along with subnets, secondary ranges, routes, and other resources.</p> <pre><code>module \"preprod_vpc_shared_vpc_host\" {\n...\n}\n</code></pre>"},{"location":"slz-projects-sharedvpc/#3-private-service-access-for-preprod-vpc","title":"3. Private Service Access for Preprod VPC","text":"<p>The following resources create a Private Service Access Subnet for the preprod VPC and configure route import/export.</p> <pre><code>resource \"google_compute_global_address\" \"preprod_psa_address\" { ... }\nresource \"google_service_networking_connection\" \"preprod_psa_connection\" { ... }\nresource \"google_compute_network_peering_routes_config\" \"preprod_psa_route_export\" { ... }\n</code></pre>"},{"location":"slz-projects-sharedvpc/#4-vpc-connector-for-preprod-vpc","title":"4. VPC Connector for Preprod VPC","text":"<pre><code>resource \"google_vpc_access_connector\" \"vpcconn-preprod\" { ... }\n</code></pre>"},{"location":"slz-projects-sharedvpc/#5-cloud-nat-for-preprod-vpc","title":"5. Cloud NAT for Preprod VPC","text":"<pre><code>module \"cloud-nat\" {\n...\n}\n</code></pre>"},{"location":"slz-projects-sharedvpc/#6-production-vpc","title":"6. Production VPC","text":"<p>This module sets up the Production Virtual Private Cloud (VPC), including subnets, secondary IP ranges, and routes.</p> <pre><code>module \"prod_vpc_shared_vpc_host\" {\n...\n}\n</code></pre>"},{"location":"slz-projects-sharedvpc/#usage","title":"Usage","text":"<p>To utilize these modules, simply include them in your Terraform project, providing the necessary variables as outlined in each module's documentation.</p>"},{"location":"slz-projects-sharedvpc/#slz-considerations","title":"SLZ Considerations","text":"<p>This module aligns with the principles of the Service Landing Zone (SLZ) to provide a secure and scalable network infrastructure, ensuring the separation of preproduction and production environments, while maintaining accessibility for managed services like VertexAI, CloudSQL, CloudBuild, etc.</p> <p>Info</p> <p>From this point on the document is autogenerated, don't modify it directly</p>"},{"location":"slz-projects-sharedvpc/#code","title":"Code","text":"<pre><code>module \"shared_vpc_host_project\" {\nsource                         = \"terraform-google-modules/project-factory/google\"\nversion                        = \"14.2.0\"\nname                           = \"owner-cor-shared-vpc-host\"\nrandom_project_id              = true\nrandom_project_id_length       = 3\norg_id                         = var.org_id\nbilling_account                = var.billing_account\nfolder_id                      = module.folders.id[\"Network\"]\nenable_shared_vpc_host_project = true\ndefault_service_account        = \"disable\"\nactivate_apis                  = var.activate_apis[\"Network\"]\nlabels = {\nterraform_managed = true\nnetwork_host      = true\n}\n}\n</code></pre>"},{"location":"slz-projects-sharedvpc/#this-module-creates-a-gcp-vpc-and-assigns-subnets-and-routes-to-the-range-you-can-also-use-this-module-to-create-secondary-ip-ranges-and-firewall-rules","title":"### This Module creates a GCP VPC and assigns subnets and routes to the range. You can also use this module to create secondary IP ranges, and firewall rules","text":""},{"location":"slz-projects-sharedvpc/#_1","title":"Shared VPC Projects","text":""},{"location":"slz-projects-sharedvpc/#preprod-vpc","title":"###          PREPROD VPC","text":""},{"location":"slz-projects-sharedvpc/#_2","title":"Shared VPC Projects","text":"<pre><code>module \"preprod_vpc_shared_vpc_host\" {\nsource                                 = \"terraform-google-modules/network/google\"\nversion                                = \"6.0.1\"\nproject_id                             = module.shared_vpc_host_project.project_id\nnetwork_name                           = \"preprod-vpc\"\nrouting_mode                           = \"GLOBAL\"\ndelete_default_internet_gateway_routes = true\nsubnets = [\n{\nsubnet_name           = \"owner-trans-dev-us-east4\"\nsubnet_ip             = \"192.168.32.0/24\"\nsubnet_region         = \"us-east4\"\nsubnet_private_access = true\nsubnet_flow_logs      = false\ndescription           = \"Develop Data Transformation Subnet\"\n},\n{\nsubnet_name           = \"owner-projecta-dev-us-east4\"\nsubnet_ip             = \"192.168.33.0/24\"\nsubnet_region         = \"us-east4\"\nsubnet_private_access = true\nsubnet_flow_logs      = false\ndescription           = \"Develop Data projectaion Subnet\"\n},\n{\nsubnet_name           = \"owner-cur-dev-us-east4\"\nsubnet_ip             = \"192.168.34.0/24\"\nsubnet_region         = \"us-east4\"\nsubnet_private_access = true\nsubnet_flow_logs      = false\ndescription           = \"Develop Data Curated Subnet\"\n},\n{\nsubnet_name           = \"owner-trans-qa-us-east4\"\nsubnet_ip             = \"192.168.35.0/24\"\nsubnet_region         = \"us-east4\"\nsubnet_private_access = true\nsubnet_flow_logs      = false\ndescription           = \"QA Data Transformation Subnet\"\n},\n{\nsubnet_name           = \"owner-projecta-qa-us-east4\"\nsubnet_ip             = \"192.168.36.0/24\"\nsubnet_region         = \"us-east4\"\nsubnet_private_access = true\nsubnet_flow_logs      = false\ndescription           = \"QA Data projectaion Subnet\"\n},\n{\nsubnet_name           = \"owner-cur-qa-us-east4\"\nsubnet_ip             = \"192.168.37.0/24\"\nsubnet_region         = \"us-east4\"\nsubnet_private_access = true\nsubnet_flow_logs      = false\ndescription           = \"QA Data Curated Subnet\"\n},\n{\nsubnet_name           = \"owner-trans-staging-us-east4\"\nsubnet_ip             = \"192.168.38.0/24\"\nsubnet_region         = \"us-east4\"\nsubnet_private_access = true\nsubnet_flow_logs      = false\ndescription           = \"Staging Data Transformation Subnet\"\n},\n{\nsubnet_name           = \"owner-projecta-staging-us-east4\"\nsubnet_ip             = \"192.168.39.0/24\"\nsubnet_region         = \"us-east4\"\nsubnet_private_access = true\nsubnet_flow_logs      = false\ndescription           = \"Staging Data projectaion Subnet\"\n},\n{\nsubnet_name           = \"owner-cur-staging-us-east4\"\nsubnet_ip             = \"192.168.40.0/24\"\nsubnet_region         = \"us-east4\"\nsubnet_private_access = true\nsubnet_flow_logs      = false\ndescription           = \"Staging Data Curated Subnet\"\n},\n{\nsubnet_name           = \"owner-trans-prodfix-us-east4\"\nsubnet_ip             = \"192.168.41.0/24\"\nsubnet_region         = \"us-east4\"\nsubnet_private_access = true\nsubnet_flow_logs      = false\ndescription           = \"Production fixes Data Transformation Subnet\"\n},\n{\nsubnet_name           = \"owner-projecta-prodfix-us-east4\"\nsubnet_ip             = \"192.168.42.0/24\"\nsubnet_region         = \"us-east4\"\nsubnet_private_access = true\nsubnet_flow_logs      = false\ndescription           = \"Production fixes Data projectaion Subnet\"\n},\n{\nsubnet_name           = \"owner-cur-prodfix-us-east4\"\nsubnet_ip             = \"192.168.43.0/24\"\nsubnet_region         = \"us-east4\"\nsubnet_private_access = true\nsubnet_flow_logs      = false\ndescription           = \"Production fixes Data Curated Subnet\"\n},\n{\nsubnet_name           = \"nonprod-vpc-con-us-east4\"\nsubnet_ip             = \"192.168.44.0/28\"\nsubnet_region         = \"us-east4\"\nsubnet_private_access = true\nsubnet_flow_logs      = false\ndescription           = \"Dedicated non prod VPC Connector Subnet\"\n}\n]\nsecondary_ranges = {\nowner-trans-dev-us-east4 = [\n{\nrange_name    = \"trans-dev-pod\"\nip_cidr_range = \"10.0.0.0/23\"\n},\n{\nrange_name    = \"trans-dev-svc\"\nip_cidr_range = \"10.0.2.0/23\"\n},\n]\nowner-trans-qa-us-east4 = [\n{\nrange_name    = \"trans-qa-pod\"\nip_cidr_range = \"10.0.4.0/23\"\n},\n{\nrange_name    = \"trans-qa-svc\"\nip_cidr_range = \"10.0.6.0/23\"\n},\n]\nowner-trans-staging-us-east4 = [\n{\nrange_name    = \"trans-staging-pod\"\nip_cidr_range = \"10.0.8.0/23\"\n},\n{\nrange_name    = \"trans-staging-svc\"\nip_cidr_range = \"10.0.10.0/23\"\n},\n]\nowner-trans-prodfix-us-east4 = [\n{\nrange_name    = \"trans-prodfix-pod\"\nip_cidr_range = \"10.0.12.0/23\"\n},\n{\nrange_name    = \"trans-prodfix-svc\"\nip_cidr_range = \"10.0.14.0/23\"\n},\n]\n}\nroutes = [\n{\nname              = \"egress-igw-preprod\"\ndescription       = \"route through IGW to access internet\"\ndestination_range = \"0.0.0.0/0\"\nnext_hop_internet = \"true\"\n}\n]\n}\n</code></pre>"},{"location":"slz-projects-sharedvpc/#the-next-3-resources-ceate-a-private-service-access-subnet-for-preprod-vpc-and-configures-route-importexport","title":"# ### The next 3 resources ceate a Private Service Access Subnet for preprod VPC and configures route import/export\"","text":""},{"location":"slz-projects-sharedvpc/#private-service-access-is-what-allows-managed-services-like-vertexai-cloudsql-cloudbuild-etc-to-have-ip-addressed","title":"# ### Private Service Access is what allows managed services like VertexAI, CloudSQL, Cloudbuild, etc, to have IP addressed","text":"<pre><code>resource \"google_compute_global_address\" \"preprod_psa_address\" {\nname          = \"preprod-psconnect-ips\"\nproject       = module.shared_vpc_host_project.project_id\npurpose       = \"VPC_PEERING\"\naddress_type  = \"INTERNAL\"\nnetwork       = module.preprod_vpc_shared_vpc_host.network_id\naddress       = \"192.168.88.0\"\nprefix_length = \"21\"\n}\n</code></pre> <pre><code>resource \"google_service_networking_connection\" \"preprod_psa_connection\" {\nnetwork                 = module.preprod_vpc_shared_vpc_host.network_id\nservice                 = \"servicenetworking.googleapis.com\"\nreserved_peering_ranges = [google_compute_global_address.preprod_psa_address.name]\n}\n</code></pre> <pre><code>resource \"google_compute_network_peering_routes_config\" \"preprod_psa_route_export\" {\nproject              = module.shared_vpc_host_project.project_id\npeering              = google_service_networking_connection.preprod_psa_connection.peering\nnetwork              = module.preprod_vpc_shared_vpc_host.network_name\nimport_custom_routes = true\nexport_custom_routes = true\n}\n</code></pre>"},{"location":"slz-projects-sharedvpc/#_3","title":"#","text":""},{"location":"slz-projects-sharedvpc/#vpc-connector-for-preprod-vpc","title":"# ### VPC CONNECTOR FOR PREPROD VPC","text":""},{"location":"slz-projects-sharedvpc/#_4","title":"#","text":"<pre><code>resource \"google_vpc_access_connector\" \"vpcconn-preprod\" {\nname    = \"vpcconn-preprod\"\nproject = module.shared_vpc_host_project.project_id\nregion  = \"us-east4\"\nsubnet {\nname = \"nonprod-vpc-con-us-east4\"\n}\n}\n</code></pre>"},{"location":"slz-projects-sharedvpc/#cloud-nat-for-preprod-vpc-us-east4","title":"Cloud NAT for preprod VPC us-east4","text":"<pre><code>module \"cloud-nat\" {\nsource        = \"terraform-google-modules/cloud-nat/google\"\nversion       = \"4.0.0\"\nproject_id    = module.shared_vpc_host_project.project_id\ncreate_router = true\nnetwork       = module.preprod_vpc_shared_vpc_host.network_id\nregion        = \"us-east4\"\nrouter        = \"cloud-router-us-east4\"\nname          = \"preprod-cloud-nat-us-east4\"\n}\n</code></pre>"},{"location":"slz-projects-sharedvpc/#_5","title":"#","text":""},{"location":"slz-projects-sharedvpc/#production-vpc","title":"# ###        PRODUCTION VPC","text":""},{"location":"slz-projects-sharedvpc/#_6","title":"#","text":"<pre><code>module \"prod_vpc_shared_vpc_host\" {\nsource                                 = \"terraform-google-modules/network/google\"\nversion                                = \"7.3.0\"\nproject_id                             = module.shared_vpc_host_project.project_id\nnetwork_name                           = \"production-vpc\"\nrouting_mode                           = \"GLOBAL\"\ndelete_default_internet_gateway_routes = true\nsubnets = [\n{\nsubnet_name           = \"owner-trans-prod-us-east5\"\nsubnet_ip             = \"192.168.0.0/24\"\nsubnet_region         = \"us-east5\"\nsubnet_private_access = true\nsubnet_flow_logs      = false\ndescription           = \"Prod Transformation Subnet\"\n},\n{\nsubnet_name           = \"owner-projecta-prod-us-east5\"\nsubnet_ip             = \"192.168.1.0/24\"\nsubnet_region         = \"us-east5\"\nsubnet_private_access = true\nsubnet_flow_logs      = false\ndescription           = \"Prod projectaion Subnet\"\n},\n{\nsubnet_name           = \"owner-cur-prod-us-east5\"\nsubnet_ip             = \"192.168.3.0/24\"\nsubnet_region         = \"us-east5\"\nsubnet_private_access = true\nsubnet_flow_logs      = false\ndescription           = \"Prod Curated Subnet\"\n},\n{\nsubnet_name           = \"owner-trans-dr-us-west1\"\nsubnet_ip             = \"192.168.4.0/24\"\nsubnet_region         = \"us-west1\"\nsubnet_private_access = true\nsubnet_flow_logs      = false\ndescription           = \"Disaster Recovery Transformation Subnet\"\n},\n{\nsubnet_name           = \"owner-projecta-dr-us-west1\"\nsubnet_ip             = \"192.168.5.0/24\"\nsubnet_region         = \"us-west1\"\nsubnet_private_access = true\nsubnet_flow_logs      = false\ndescription           = \"Disaster Recovery projectaion Subnet\"\n},\n{\nsubnet_name           = \"owner-cur-dr-us-west1\"\nsubnet_ip             = \"192.168.6.0/24\"\nsubnet_region         = \"us-west1\"\nsubnet_private_access = true\nsubnet_flow_logs      = false\ndescription           = \"Disaster Recovery Curated Subnet\"\n},\n{\nsubnet_name           = \"prod-vpc-con-us-east5\"\nsubnet_ip             = \"192.168.2.0/28\"\nsubnet_region         = \"us-east5\"\nsubnet_private_access = true\nsubnet_flow_logs      = false\ndescription           = \"Dedicated prod VPC Connector Subnet\"\n}\n]\nsecondary_ranges = {\nowner-trans-prod-us-east5 = [\n{\nrange_name    = \"trans-prod-pod\"\nip_cidr_range = \"10.0.0.0/23\"\n},\n{\nrange_name    = \"trans-prod-svc\"\nip_cidr_range = \"10.0.2.0/23\"\n},\n]\nowner-dr-us-west1 = [\n{\nrange_name    = \"trans-dr-pod\"\nip_cidr_range = \"10.0.4.0/23\"\n},\n{\nrange_name    = \"trans-dr-svc\"\nip_cidr_range = \"10.0.6.0/23\"\n},\n]\n}\nroutes = [\n{\nname              = \"egress-igw-prod\"\ndescription       = \"route through IGW to access internet\"\ndestination_range = \"0.0.0.0/0\"\nnext_hop_internet = \"true\"\n}\n]\n}\n</code></pre>"},{"location":"slz-projects-sharedvpc/#the-next-3-resources-ceate-a-private-service-access-subnet-for-production-vpc-and-configures-route-importexport","title":"# ### The next 3 resources ceate a Private Service Access Subnet for Production VPC and configures route import/export\"","text":""},{"location":"slz-projects-sharedvpc/#private-service-access-is-what-allows-managed-services-like-vertexai-cloudsql-cloudbuild-etc-to-have-ip-addressed_1","title":"# ### Private Service Access is what allows managed services like VertexAI, CloudSQL, Cloudbuild, etc, to have IP addressed","text":"<pre><code>resource \"google_compute_global_address\" \"prod_psa_address\" {\nname          = \"prod-psconnect-ips\"\nproject       = module.shared_vpc_host_project.project_id\npurpose       = \"VPC_PEERING\"\naddress_type  = \"INTERNAL\"\nnetwork       = module.prod_vpc_shared_vpc_host.network_id\naddress       = \"192.168.88.0\"\nprefix_length = \"21\"\n}\n</code></pre> <pre><code>resource \"google_service_networking_connection\" \"prod_psa_connection\" {\nnetwork                 = module.prod_vpc_shared_vpc_host.network_id\nservice                 = \"servicenetworking.googleapis.com\"\nreserved_peering_ranges = [google_compute_global_address.prod_psa_address.name]\n}\n</code></pre> <pre><code>resource \"google_compute_network_peering_routes_config\" \"prod_psa_route_export\" {\nproject              = module.shared_vpc_host_project.project_id\npeering              = google_service_networking_connection.prod_psa_connection.peering\nnetwork              = module.prod_vpc_shared_vpc_host.network_name\nimport_custom_routes = true\nexport_custom_routes = true\n}\n</code></pre>"},{"location":"slz-projects-sharedvpc/#_7","title":"#","text":""},{"location":"slz-projects-sharedvpc/#vpc-connector-for-prod-vpc","title":"# ### VPC CONNECTOR FOR PROD VPC","text":""},{"location":"slz-projects-sharedvpc/#_8","title":"#","text":"<pre><code>resource \"google_vpc_access_connector\" \"vpcconn-prod\" {\nname    = \"vpcconn-prod\"\nproject = module.shared_vpc_host_project.project_id\nregion  = \"us-east5\"\nsubnet {\nname = \"prod-vpc-con-us-east5\"\n}\n}\n</code></pre>"},{"location":"slz-projects-sharedvpc/#cloud-nat-for-prod-vpc-us-east5","title":"Cloud NAT for prod VPC us-east5","text":"<pre><code>module \"cloud-nat-prod\" {\nsource        = \"terraform-google-modules/cloud-nat/google\"\nversion       = \"4.0.0\"\nproject_id    = module.shared_vpc_host_project.project_id\ncreate_router = true\nnetwork       = module.prod_vpc_shared_vpc_host.network_id\nregion        = \"us-east5\"\nrouter        = \"cloud-router-us-east5\"\nname          = \"prod-cloud-nat-us-east5\"\n}\n</code></pre>"},{"location":"slz-projects-sharedvpc/#_9","title":"#","text":""},{"location":"slz-projects-sharedvpc/#firewall-policies","title":"# ###       FIREWALL POLICIES","text":""},{"location":"slz-projects-sharedvpc/#_10","title":"#","text":"<pre><code>module \"firewall_policy\" {\nsource      = \"../modules/network-firewall-policy\"\nproject_id  = module.shared_vpc_host_project.project_id\npolicy_name = \"owner-fw-policy\"\ndescription = \"owner firewall policy\"\ntarget_vpcs = [module.preprod_vpc_shared_vpc_host.network_id, module.prod_vpc_shared_vpc_host.network_id]\nrules = [\n    # {\n    #   priority       = \"1000\"\n    #   direction      = \"EGRESS\"\n    #   action         = \"deny\"\n    #   rule_name      = \"default-egress-deny-all\"\n    #   description    = \"Block all default outgoing traffic from the VPC\"\n    #   enable_logging = true\n    #   match = {\n    #     dest_ip_ranges = [\"0.0.0.0/0\"]\n    #   }\n    # },\n{\npriority       = \"800\"\ndirection      = \"INGRESS\"\naction         = \"allow\"\nrule_name      = \"allow-ingress-owner-ips\"\ndescription    = \"Allow traffic into the VPC from owner primary and secondary IPs\"\nenable_logging = true\nmatch = {\n        # current IPS for [\"owner_primary_ip\", \"owner_secondary_ip\"]\nsrc_ip_ranges = [\"47.19.146.114\", \"75.127.173.50\"]\n}\n},\n{\npriority       = \"700\"\ndirection      = \"EGRESS\"\naction         = \"allow\"\nrule_name      = \"allow-egress-cloud-run-jobs\"\ndescription    = \"Allow egress traffic for Cloud Run jobs scraping websites\"\nenable_logging = true\nmatch = {\n        # current IPS for [mis.nyiso.com,   api.misoenergy.org, www.ercot.com]\ndest_ip_ranges = [\"204.152.47.69/32\", \"52.176.6.37/32\", \"45.60.45.66\"]\n}\n}\n]\n}\n</code></pre>"},{"location":"tfstate-buckets/","title":"Altus Projects Terraform State Buckets Documentation","text":"<p>This document explains the Terraform code responsible for creating and managing Google Cloud Storage buckets for Altus ingest, curated, and transformation projects.</p>"},{"location":"tfstate-buckets/#overview","title":"Overview","text":"<p>The code snippet consists of three distinct modules to create buckets for different types of Altus projects. Each module is parameterized to work with filtered folders and specific configurations.</p>"},{"location":"tfstate-buckets/#local-variables","title":"Local Variables","text":"<p>The code begins by defining local variables to filter out specific buckets for ingest, curated, and transformation.</p> <pre><code>locals {\nfiltered_ingest_buckets  = { for k, v in module.ingest_folders.id : k =&gt; v if k != \"Altus-Ingest\" }\nfiltered_curated_buckets = { for k, v in module.curated_folders.id : k =&gt; v if k != \"Altus-Cur\" }\nfiltered_trans_buckets   = { for k, v in module.trans_folders.id : k =&gt; v if k != \"Altus-Trans\" }\n}\n</code></pre>"},{"location":"tfstate-buckets/#altus-ingest-projects-terraform-state-bucket","title":"Altus Ingest Projects Terraform State Bucket","text":"<p>This module creates Google Cloud Storage buckets for Altus ingest projects, with specific permissions.</p> <pre><code>module \"altus_ingest_projects_tf_state\" {\nfor_each                 = local.filtered_ingest_buckets\n...\npublic_access_prevention = \"enforced\"\niam_members = [\n{\nrole   = \"roles/storage.objectViewer\"\nmember = \"serviceAccount:${google_service_account.service_account.email}\"\n},\n]\n}\n</code></pre>"},{"location":"tfstate-buckets/#altus-curated-projects-terraform-state-bucket","title":"Altus Curated Projects Terraform State Bucket","text":"<p>This module creates buckets for Altus curated projects, mirroring the configuration used for the ingest projects.</p> <pre><code>module \"altus_curated_projects_tf_state\" {\nfor_each                 = local.filtered_curated_buckets\n...\npublic_access_prevention = \"enforced\"\n...\n}\n</code></pre>"},{"location":"tfstate-buckets/#altus-transformation-projects-terraform-state-bucket","title":"Altus Transformation Projects Terraform State Bucket","text":"<p>Similar to the other two modules, this module creates transformation projects' buckets.</p> <pre><code>module \"altus_trans_projects_tf_state\" {\nfor_each                 = local.filtered_trans_buckets\n...\npublic_access_prevention = \"enforced\"\n...\n}\n</code></pre>"},{"location":"tfstate-buckets/#usage","title":"Usage","text":"<p>Apply this code to create and manage Altus ingest, curated, and transformation projects' Google Cloud Storage buckets within your Google Cloud Platform organization.</p> <p>Info</p> <p>From this point on the document is autogenerated, don't modify it directly</p>"},{"location":"tfstate-buckets/#code","title":"Code","text":"<p>The code is creating a Terraform module named \"tf_state\" using the Google Cloud Storage simple bucket module, with a specified name, project ID from the <code>org_seed_project</code> module, location set to 'us-east1', enforced public access prevention, and an IAM policy granting 'storage.objectViewer' role to the group 'gcp-organization-admins@ownerpower.com'.</p> <p>This Bucket holds the SLZ terraform state</p> <pre><code>module \"tf_state\" {\nsource                   = \"terraform-google-modules/cloud-storage/google//modules/simple_bucket\"\nversion                  = \"~&gt; 4.0\"\nname                     = \"${var.owner}-tf-seed-state\"\nproject_id               = module.org_seed_project.project_id\nlocation                 = \"us-east1\"\npublic_access_prevention = \"enforced\"\niam_members = [\n{\nrole   = \"roles/storage.objectViewer\"\nmember = \"group:gcp-organization-admins@ownerpower.com\"\n},\n]\n}\n</code></pre> <p>The code is creating a Terraform module named \"tf_state\" using the Google Cloud Storage simple bucket module, with a specified name, project ID from the <code>org_seed_project</code> module, location set to 'us-east1', enforced public access prevention, and an IAM policy granting 'storage.objectViewer' role to the group 'gcp-organization-admins@ownerpower.com'.</p> <p>This Bucket holds the CICD Project terraform state</p> <pre><code>module \"cicd_tf_state\" {\nsource                   = \"terraform-google-modules/cloud-storage/google//modules/simple_bucket\"\nversion                  = \"~&gt; 4.0\"\nname                     = \"${var.owner}-tf-cicd-proj-state\"\nproject_id               = module.org_seed_project.project_id\nlocation                 = \"us-east1\"\npublic_access_prevention = \"enforced\"\niam_members = [\n{\nrole   = \"roles/storage.objectViewer\"\nmember = \"group:gcp-organization-admins@ownerpower.com\"\n},\n]\n}\n</code></pre> <p>This code is creating local Terraform variables that filter out specific buckets from the <code>projecta_folders</code>, <code>projectb_folders</code>, and <code>projectc_folders</code> modules based on their keys, excluding those with keys \"${var.owner}-projecta\", \"${var.owner}-projectb\", and \"${var.owner}-projectc\" respectively.</p> <pre><code>locals {\nfiltered_projecta_buckets = { for k, v in module.projecta_folders.id : k =&gt; v if k != \"${var.owner}-projecta\" }\nfiltered_projectb_buckets  = { for k, v in module.projectb_folders.id : k =&gt; v if k != \"${var.owner}-projectb\" }\nfiltered_projectc_buckets    = { for k, v in module.projectc_folders.id : k =&gt; v if k != \"${var.owner}-projectc\" }\n}\n</code></pre> <p>The code is creating a Terraform module named \"tf_state\" using the Google Cloud Storage simple bucket module, with a specified name, project ID from the <code>org_seed_project</code> module, location set to 'us-east1', enforced public access prevention, and an IAM policy granting 'storage.objectViewer' role to the group 'gcp-organization-admins@ownerpower.com'.</p> <p>This Bucket holds the Project A terraform state</p> <pre><code>module \"owner_projecta_projects_tf_state\" {\nfor_each                 = local.filtered_projecta_buckets\nsource                   = \"terraform-google-modules/cloud-storage/google//modules/simple_bucket\"\nversion                  = \"~&gt; 4.0\"\nname                     = each.key\nproject_id               = module.org_seed_project.project_id\nlocation                 = \"us-east1\"\npublic_access_prevention = \"enforced\"\niam_members = [\n{\nrole   = \"roles/storage.objectViewer\"\nmember = \"serviceAccount:${google_service_account.service_account.email}\"\n},\n]\n}\n</code></pre> <p>The code is creating a Terraform module named \"tf_state\" using the Google Cloud Storage simple bucket module, with a specified name, project ID from the <code>org_seed_project</code> module, location set to 'us-east1', enforced public access prevention, and an IAM policy granting 'storage.objectViewer' role to the group 'gcp-organization-admins@ownerpower.com'.</p> <p>This Bucket holds the Project B terraform state</p> <pre><code>module \"owner_projectb_projects_tf_state\" {\nfor_each                 = local.filtered_projectb_buckets\nsource                   = \"terraform-google-modules/cloud-storage/google//modules/simple_bucket\"\nversion                  = \"~&gt; 4.0\"\nname                     = each.key\nproject_id               = module.org_seed_project.project_id\nlocation                 = \"us-east1\"\npublic_access_prevention = \"enforced\"\niam_members = [\n{\nrole   = \"roles/storage.objectViewer\"\nmember = \"serviceAccount:${google_service_account.service_account.email}\"\n},\n]\n}\n</code></pre> <p>The code is creating a Terraform module named \"tf_state\" using the Google Cloud Storage simple bucket module, with a specified name, project ID from the <code>org_seed_project</code> module, location set to 'us-east1', enforced public access prevention, and an IAM policy granting 'storage.objectViewer' role to the group 'gcp-organization-admins@ownerpower.com'.</p> <p>This Bucket holds the Project C terraform state</p> <pre><code>module \"owner_projectc_projects_tf_state\" {\nfor_each                 = local.filtered_projectc_buckets\nsource                   = \"terraform-google-modules/cloud-storage/google//modules/simple_bucket\"\nversion                  = \"~&gt; 4.0\"\nname                     = each.key\nproject_id               = module.org_seed_project.project_id\nlocation                 = \"us-east1\"\npublic_access_prevention = \"enforced\"\niam_members = [\n{\nrole   = \"roles/storage.objectViewer\"\nmember = \"serviceAccount:${google_service_account.service_account.email}\"\n},\n]\n}\n</code></pre>"}]}